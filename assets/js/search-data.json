{
  
  "1": {
    "title": "Автологин",
    "content": "Автологин xinitrc . Автологин с помощью ~/.xinitrc и автозапуск Х после логина. . В ~/.xinitrc необходимо прописать запуск DE, WM. В самом конце файла. . exec openbox-session . Добавить в ~/.bashrc, если используем Zsh, то ~/.zshrc. Узнать какой у вас шелл, команда: echo $SHELL. . nano ~/.zshrc . Добавить наверх, после первой строки #!/usr/bin/env zsh. . [[ -z $DISPLAY &amp;&amp; $XDG_VTNR -eq 1 ]] &amp;&amp; exec startx &amp;&gt; /dev/null . Настройка сервиса . Выполнить. . sudo systemctl enable getty@.service . Данная команда создаст файл и запустит systemd сервис, просмотреть. . cat /etc/systemd/system/getty@tty1.service.d/override.conf . Если нет, то создайте вручную. . sudo mkdir /etc/systemd/system/getty@tty1.service.d sudo nano /etc/systemd/system/getty@tty1.service.d/override.conf . Должно быть так, где user - имя вашего пользователя. . [Service] ExecStart= ExecStart=-/usr/bin/agetty --autologin user --noclear %I $TERM . Отключите login менеджер (lightdm, gdm, lxdm). . systemctl disable gdm . И удалите, если нужно. . sudo pacman -R gdm . Автологин sddm . Отредактируйте конфиг. . sudo nano /etc/sddm.conf . И преведите к такому виду. Замените fiduchi на имя вашего пользователя. . [Autologin] Relogin=false User=fiduchi . Автологин Lightdm . Замените fiduchi на имя вашего пользователя. . groupadd -r autologin gpasswd -a fiduchi autologin groupadd -r nopasswdlogin gpasswd -a fiduchi nopasswdlogin . Отредактируйте конфиг. . nano /etc/lightdm/lightdm.conf . И приведите к такому виду. Замените fiduchi на имя вашего пользователя. . pam-service=lightdm pam-autologin-service=lightdm-autologin autologin-user=fiduchi autologin-user-timeout=0 session-wrapper=/etc/lightdm/Xsession .",
    "url": "https://glavos.github.io/wiki/config/autologin/",
    "relUrl": "/wiki/config/autologin/"
  }
  ,"2": {
    "title": "Glavos Linux Bspwm",
    "content": "Содержание . Скачать iso образ | Оформление | Панели Верхний бар — polybar | Нижний бар — tint2 | | Горячие клавиши Режимы и управление окнами | Запуск утилит | | Конфигурационные файлы | Утилиты | . Demo Video. . Скачать iso образ . Данный оконный менеджер доступен в xfce iso, метод online установки. . Скачать | . Рекомендации после установки next-install. . Оформление . Тема gtk: модификация Qogir. | Иконки: Qogir-dark. | Курсор: capitaine-cursors. | Шрифт: Clear Sans Medium ttf-clear-sans. | Шрифт терминала: uw-ttyp0(otb-uw_ttyp0), Hack Nerd Font Mono,9 nerd-fonts-hack. | . Панели . Верхний бар — polybar . Элементы: . Запуск меню: левый клик - rofi. | Urxvt с сессией tmux. Сессия сохраняется, при закрытии и восстанавливается, при следующем нажатии. | Newsboat - rss читалка. | Монитор cpu и ram. | Доступные обновления, клик: pacui - псевдо графический менеджер пакетов. | Рабочие столы (теги). | Сервис tor. Включить левый клик, выключить правый. | Music контроллер mpd. | Звук по скроллу, клик - выкл. | Дата. Лклик - подробней, Пклик - календарь. | Раскладка. | Меню выхода. | . Нижний бар — tint2 . Name Описание . udiskie | монтирование usb. | . redshift-gtk | цветовой тон экрана. | . xfce4-power-manager | менеджер питания. | . parcellite | менеджер буфера обмена. ctrl+alt+h открыть историю. | . Горячие клавиши . Очень многое переопределено, но никто не мешает использовать дефолт, sxhkdrc. . Добавлен дефолтный конфиг ~/.config/bspwm/sxhkd/sxhkdrc.example, если хотите просто переименуйте исходный, но создайте копию. . mv ~/.config/bspwm/sxhkd/sxhkdrc ~/.config/bspwm/sxhkd/sxhkdrc.bak mv ~/.config/bspwm/sxhkd/sxhkdrc.example ~/.config/bspwm/sxhkd/sxhkdrc . Режимы и управление окнами . Режим тайлинга tiled, плитка. | Режим pseudo_tiled, псевдо тайлинг. Нечто среднее между floating и tiled. | Режим floating, плавающий режим. | Режим fullscreen, Весь экран. | Режим monocle, окно занимает всё доступное пространство. | . Зажатая Super(win) и клавиши мыши манипулируют окнами: резмер, положение. . Ключ Описание . super + F1 | Справка по горячим клавишам на us. | . super + a | Псевдо тайлинг. | . super + s | floating, плавающий режим. | . super + d | тайлинг. | . super + f | fullscreen. | . super + m | Переключение режима monocle. | . alt + space | Переключение режима тайлинг/floating. | . super + g | Приклеить окно. | . super + z | Закрыть окно. | . super + - | Скрыть/показать окно. | . super + c | Переход в режим monocle, отключение рамок и отступов. | . super + v | Отключение отступов. | . super + alt + {↑,↓} | Уменьшение/увеличение отступов, super + c в исходное состояние. | . super + scroll | Уменьшение/увеличение отступов, super + c в исходное состояние. | . super + {←,→,↑,↓} | Перемещение окна в режиме floating. | . super + {h,j,k,l} | перемещение по окнам в режиме tiled. | . super + alt + {h,j,k,l} | изменение размера в режиме tiled. | . super + shift + {h,j,k,l} | перетаскивание в режиме tiled. | . alt + tab | Переключение окна на текущем теге. | . super + tab | Переключение на предыдущий тег. | . super + {1-9,0} | Переход на тег. | . super + {q...o,0} | Переход на тег. | . super + alt + {←,→} | Перемещение по тегам. | . super + alt + {1-9,0} | Отправка окна на номер тега. | . super + ctrl + p | Скрыть/показать polybar. | . Запуск утилит . Ключ Описание . alt + shift | Переключение раскладки. | . super + alt + r | Рестарт bspwm. | . super + alt + q | Выход из bspwm. | . super + Escape | Релоад конфига горячих клавиш sxhkd. | . alt + Return | Терминал драйвинг, задаем координаты старта, зажатым ЛКМ. | . super + Return | Терминал на первом теге, в режиме тайлинга, monocle. | . alt + t | Терминал в режиме floating. | . alt + r | Ranger - консольный менеджер файлов. | . alt + d | Rofi - меню. | . alt + w | Firefox. | . alt + f | Thunar. | . super + Delete | Блокировка экрана. | . super + alt + Delete | Меню выхода. | . Print | скрин с отправкой в ~/Pictures/screen(директория должна быть). Копируется в буфер. | . super + Print | скрин в режиме выделения. | . super + alt + Print | скрин с задержкой 5 сек. и отправкой в ~/Pictures/screen(директория должна быть). Копируется в буфер. | . super + alt + m | Текущий трек в ncmpcpp. | . ctrl + alt + {c,v} | Копировать/вставить в терминале. | . Конфигурационные файлы . Путь Описание . ~/.config/bspwm/bspwmrc | Основной конфиг. | . ~/.config/bspwm | Скрипты. | . ~/.config/bspwm/autostart.sh | Скрипт автостарта. Он вызывается в ~/.config/bspwm/bspwmrc. Функция run нужна для рестарта bspwm, избегает дублей. | . ~/.config/bspwm/sxhkd/sxhkdrc | Конфиг горячих клавиш. | . /etc/sddm.conf | Конфиг менеджера входа SDDM. | . ~/.config/bspwm/polybar | Скрипты и конфиг polybar. | . ~/.config/tint2/tray.tint2rc | Конфиг tint2 трей. В меню есть gui-конфигуратор (Настройки tint). | . ~/.config/picom.conf | Декоратор окон, композитный менеджер. | . ~/.Xresources | Конфиг Urxvt терминала. После изменения файла выполнить xrdb -merge $HOME/.Xresources. | . ~/.colors | Палитры терминала, указывать в ~/.Xresources строка #include &quot;.colors/sn&quot;. | . ~/.zshrc | Конфиг оболочки $SHELL. | . ~/.alias_zsh | Алиасы и функции zsh, сокращения команд терминала. | . Это основа, все остальное в ~/ и ~/.config. . Утилиты . Name Описание . neofetch, fetch | информация о системе. ~/.bin/fetch. | . lxappearance, qt5ct | настройка внешнего вида. | . lxrandr | разрешение экрана. | . gotop | Консольный системный монитор. | . gufw | межсетевой экран. | . ranger, thunar | файловые менеджеры. | . fzf | инкрементальный поиск, zz. | . nano, micro | консольный текстовый редактор, привычные клавиши:) ctrl+s - сохранить, ctrl+q - выход и т.д. | . leafpad | Gui текстовый редактор. | . xreader | просмотр pdf. | . viewnior | просмотр изображений. | . ncmpcpp, audacious | музыкальный плеер. | . cava | визуализатор. | . mpv, smplayer | видео плеер. | . youtube-dl, straw-viewer, streamlink | скачивание, просмотр, просмотр стриминга. | . simplescreenrecorder | Запись экрана. | . flameshot | скриншоты. | . keepassxc | менеджер паролей. | . veracrypt | шифрование файлов. | . pavucontrol | управление звуком. | . file-roller | менеджер архивов. | . timeshift | резервное копирование. | . tmux | терминальный мультиплексор. | . tmrun.sh | Tmux с 3 табами. ~/.bin/tmrun.sh. | . Еще скрипты: ~/.bin. . Комментарии приветствуются. Вступай в telegram чат: t.me/glavos. .",
    "url": "https://glavos.github.io/wiki/wm/bspwm/",
    "relUrl": "/wiki/wm/bspwm/"
  }
  ,"3": {
    "title": "Btrfs установка и использование",
    "content": "Содержание . Btrfs установка | Использование btrfs | Установка из существующей системы или с live usb | Btrfs установка . Установите пакет пользовательских утилит. . pacman -S btrfs-progs arch-install-scripts . lsblk - подсветить все разделы что бы определиться что монтировать. . # разбить диск, -z говорит обнулить таблицу разделов cfdisk -z /dev/sda . Так как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен. . mkswap /dev/sda2 . Создаём файловую систему на разделе. Для разделов от 1ГБ и меньше, чтобы более эффективно использовать пространство, рекомендуется передать ключ -M к параметрам mkfs.btrfs. . При желании можно задать лэйбл ключом -L. . mkfs.btrfs /dev/sda&lt;цифра&gt; mkfs.btrfs -L &quot;root&quot; /dev/sda&lt;цифра&gt; . Теперь монтируем. . mount /dev/sdb1 /mnt . Затем создадим два подтома под корень и домашние каталоги пользователей. . btrfs subvolume create /mnt/@ btrfs subvolume create /mnt/@home . Просмотр субволумов. . btrfs subvolume list /mnt . Отмонтируем корень ФС. . umount /mnt . Для того, чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol. . Монтируем корень. Сжатие zstd, или lzo. . mount -o subvol=@,compress=zstd /dev/sdb1 /mnt . Создаём директорию и монтируем в неё наш будущий каталог пользователей. . mkdir /mnt/home mount -o subvol=@home,compress=zstd /dev/sdb1 /mnt/home . Дальше действуем по вики, т.е. выбираем зеркала и ставим базовую систему. При генерации initramfs mkinitcpio будет ругаться на отсутствие fsck.btrfs - это нормальное явление. Уберём этот хук fsck из конфига, т.к. для Btrfs он не требуется. . nano /etc/mkinitcpio.conf . Вот данная строка в файле. . HOOKS=&quot;base udev autodetect modconf block filesystems keyboard&quot; . И пересоздадим initramfs. . mkinitcpio -p linux . И ещё момент по поводу загрузчика, не знаю как другие, а grub точно умеет грузиться с Btrfs, так что выбрать лучше именно его. Так же не забудьте установить пакет btrfs-progs и позаботиться о бэкапах. . Использование btrfs . Монтируем корень ФС. . mount /dev/sdb1 /mnt . Создавать снапшоты. . btrfs subvolume snapshot /mnt/@ /mnt/@_bac btrfs subvolume snapshot /mnt/@home /mnt/@home_bac btrfs subvolume list /mnt . Каталоги абсолютно идентичны, и пока мы не начнём изменять файлы, снимки места не занимают. . Удаление. . btrfs subvolume delete /mnt/@ . Откат: грузимся с live CD, монтируем корень ФС и переименовываем подтома. Так же подтома можно переименовать прямо в рабочей системе, если загрузка удачна. . mount /dev/sdb1 /mnt mv /mnt/@ /mnt/@_bad mv /mnt/@_bac /mnt/@ mv /mnt/@home /mnt/@home_bad mv /mnt/@home_bac /mnt/@home . Либо грузимся как обычно, а в меню grub указываем подтом с бэкапом rootflags=subvol=backup. . Копирование при записи (CoW). Если использовать команду cp с ключом --reflink=auto, то копия файла не будет занимать место на диске. И впоследствии, допустим, при изменении скопированного файла, записываться на диск будут только изменённые блоки. . “Онлайн” - проверка ФС. При которой осуществляется чтение всех данных/метаданных с перепроверкой контрольных сумм, при наличии ошибок обнаружение их и исправление по возможности. . btrfs scrub start -B / . Если опустить ключ -B, процесс уйдёт в фон, и о ходе выполнения можно будет узнать командой. . btrfs scrub status / . Пример вывода. . scrub status for 56edc366-a153-4eee-b2a6-471b7066b93d scrub started at Sat Dec 14 06:37:19 2013 and finished after 3242 seconds total bytes scrubbed: 222.45GB with 0 errors . Рекомендуется проводить проверку регулярно (еженедельно). “Оффлайн” - проверка ФС (на отмонтированном разделе). При отсутствии ошибок утилита возвратит 0. . btrfs check /dev/sda . Установка из существующей системы или с live usb . pacman -S btrfs-progs arch-install-scripts . lsblk - подсветить все разделы что бы определиться что монтировать. . Так как Btrfs не может содержать swap-файл, необходимо заранее позаботиться о разделе с подкачкой, если он вам нужен. . mkswap /dev/sda2 . Внимание! это отформатирует весь ваш диск, с потерей данных! В данном примере установка идет на весь диск, а не разделы, если вам нужен swap учтите этот момент. . mkfs.btrfs -f -L WD /dev/sdb . Монтируем. . mount /dev/sdb /mnt . Создадим два подтома под root @ и домашний каталог пользователя @home. . btrfs subvolume create /mnt/@ btrfs subvolume create /mnt/@home . И отмонтируем корень ФС. . umount /mnt . Монтируем корень. . mount -o subvol=@,compress=zstd /dev/sdb /mnt . Создаём директорию и монтируем в неё наш будущий каталог пользователей. . mkdir /mnt/home mount -o subvol=@home,compress=zstd /dev/sdb /mnt/home . Устанавливаем базовые пакеты. . pacstrap /mnt base base-devel linux linux-headers xorg-xinit xorg-server grub zsh mc nano netctl wpa_supplicant dialog dhcpcd btrfs-progs . Создаём fstab. . genfstab -pU /mnt &gt;&gt; /mnt/etc/fstab . Проверяем. . cat /mnt/etc/fstab . Создаем директорию и монтируем boot, если нужно. . mount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda2 . Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием. . touch /swap # создаем пустой файл /swap chmod go-r /swap # swap должен иметь права 600 chattr +C /swap # отключаем COW, сжатие тоже отключается fallocate /swap -l4g # файл 4Gb mkswap /swap swapon /swap . Проверим. . btrfs subvolume list /mnt . Входим в систему. . chroot /mnt /bin/zsh . Назначаем хост. . echo glavos &gt; /etc/hostname . Выбор часового пояса. . ln -sf /usr/share/zoneinfo/UTC /etc/localtime hwclock --systohc --utc timedatectl set-ntp true # или timedatectl set-timezone Europe/Moscow . Выберем локаль для системы. . sed -i &quot;s/# (en_US .UTF-8 )/ 1/&quot; /etc/locale.gen sed -i &quot;s/# (ru_RU .UTF-8 )/ 1/&quot; /etc/locale.gen locale-gen # Сгенерировать локали . Прописать в /etc/locale.conf. . echo &quot;LANG=ru_RU.UTF-8&quot; &gt; /etc/locale.conf echo &quot;LC_COLLATE=C&quot; &gt;&gt; /etc/locale.conf . Русский шрифт в консоли. . echo &quot;KEYMAP=ru&quot; &gt; /etc/vconsole.conf echo &quot;FONT=cyr-sun16&quot; &gt;&gt; /etc/vconsole.conf . Создаём рам-диск mkinitcpio. . nano /etc/mkinitcpio.conf . В /etc/mkinitcpio.conf, в разделе HOOKS, должен быть прописан хук keyboard keymap, убрать fsck. . В разделе MODULES нужно прописать свой драйвер видеокарты: i915 для Intel, radeon для AMD, nouveau для Nvidia. . HOOKS=(base udev autodetect modconf block filesystems keyboard keymap) . mkinitcpio -p linux . Задать пароль root. . passwd . Создать пользователя. . useradd -m -g users -G wheel,audio,video,storage -s /bin/zsh st . И задать ему пароль. . passwd st . Расскомментировать в /etc/pacman.conf. . [multilib] Include = /etc/pacman.d/mirrorlist . Затем выполнить. . pacman-key --init pacman-key --populate pacman -Syy . Установка boot loaderа. . grub-install /dev/sdb grub-mkconfig -o /boot/grub/grub.cfg .",
    "url": "https://glavos.github.io/wiki/btrfs/btrfs-part1/",
    "relUrl": "/wiki/btrfs/btrfs-part1/"
  }
  ,"4": {
    "title": "Btrfs перенос, восстановление",
    "content": "Содержание . Перенос на раздел | Снапшот на другой раздел Отправка по ssh | | Восстановление | Перенос на раздел . pacman -S rsync btrfs-progs arch-install-scripts . lsblk - подсветить все разделы что бы определиться что монтировать. . При необходимости разбить диск, флаг -z обнулить таблицу разделов. . cfdisk -z /dev/sda . Монтируем. . mount /dev/sda6 /mnt . Создадим три подтома root, домашний каталог пользователя и подтом для хранения. . btrfs subvolume create /mnt/@_root btrfs subvolume create /mnt/@_home btrfs subvolume create /mnt/@_snapshots btrfs subvolume list /mnt . Для переноса смонтируйте резервную систему и перенесите ее. . mkdir /mnt/dump mount /dev/sdb1 /mnt/dump . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/boot/*&quot;,&quot;/home/*&quot;} /mnt/dump/@/* /mnt/@_root/ . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/boot/*&quot;,&quot;/home/*&quot;} /mnt/dump/@home/* /mnt/@_home/ . И отмонтируем корень ФС. . umount /mnt rm -rf /mnt/dump . Чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol=PATH. PATH - путь относительно корня ФС. Монтируем корень. Сжатие zstd, или lzo. . mount -o subvol=@,compress=zstd /dev/sda6 /mnt . Какие рекомендуемые варианты для установки на SD-карту, или медленный SSD-накопитель? В /etc/fstab См. https://wiki.debian.org/Btrfs. . /dev/sdaX / btrfs x-systemd.device-timeout=0,noatime,compress=lzo,commit=0,ssd_spread,autodefrag 0 0 UUID=&lt;the_device_uuid&gt; /mount/point/ btrfs noauto,compress=lzo,noatime,autodefrag 0 0 . Создаём директорию и монтируем в неё наш будущий каталог пользователей, если boot раздел отдеольно, нужно его тоже смонтироват в /mnt/boot. . Если нужно mkdir /mnt/home. . mount -o subvol=@home,compress=zstd /dev/sda6 /mnt/home . Если нужно mkdir /mnt/snapshots. . mount -o subvol=@snapshots,compress=zstd /dev/sda6 /mnt/snapshots mount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda3 . Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием. . touch /swap # создаем пустой файл /swap chmod go-r /swap # swap должен иметь права 600 chattr +C /swap # отключаем COW, сжатие тоже отключается fallocate /swap -l4g # файл 4Gb mkswap /swap swapon /swap . Теперь нужно проинициализировать систему. Редактируем FSTAB, или запускаем genfstab. . rm /mnt/etc/fstab genfstab -pU /mnt &gt; /mnt/etc/fstab . Переходим в нашу новую систему. . chroot /mnt /bin/bash . Генерация initramfs с помощью mkinicpio. . mkinitcpio -p linux . Установить загрузчик GRUB2 и сконфигурировать его. . grub-install /dev/sdХ grub-mkconfig -o /boot/grub/grub.cfg . exit или “Ctrl + D” выйти из chroot. . Теперь нужно все размонтировать. . umount /mnt/home umount /mnt/snapshots umount /mnt reeboot . Снапшот на другой раздел . Incremental_Backup | btrfs-sxbackup | btrfs-snapshot | . Монтируем основной раздел. . mkdir /mnt/arch mount /dev/sda6 /mnt/arch . Монтируем раздел/диск для сброса снапшота. . mkdir /mnt/dump mount /dev/sda8 /mnt/dump . Нужно создавать снапшоты, только для чтения(readonly), требует send. Для отправки на другие узлы. . Сбрасываем все из кэша на диск sync, ВАЖНО. . btrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP sync btrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP sync . Переносим снапшоты. Можно send в файл btrfs send /mnt/arch/@_BACKUP -f /dump.sn, receive из файла btrfs receive /mnt/dump/ -f /dump.sn. . btrfs send /mnt/arch/@_BACKUP | btrfs receive /mnt/dump/ btrfs send /mnt/arch/@home_BACKUP | btrfs receive /mnt/dump/ . Инкрементальные readonly снимки. . btrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP_new sync btrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP_new sync . Создаём разность между снимками. . btrfs send -p /mnt/arch/@_BACKUP /mnt/arch/@_BACKUP_new | btrfs receive /mnt/dump/ btrfs send -p /mnt/arch/@home_BACKUP /mnt/arch/@home_BACKUP_new | btrfs receive /mnt/dump/ . Просмотрим листинг. . btrfs subvolume list /mnt/dump . Отправка по ssh . Локально: генерируем ключи, создаём ~/.ssh/config. . # генерация пары ключий, публичный(отправляем на сервер) # id_rsa.pub ssh-keygen -t rsa -b 4096 -C &quot;lol@gmail.com&quot; # nano ~/.ssh/config Host office HostName 192.168.100.51 Port 22 User test . PasswordAuthentication yes # на сервере /etc/ssh/sshd_config systemctl restart sshd ssh-copy-id -i ~/.ssh/id_rsa.pub office # отправка ключа на сервер # на сервере /etc/ssh/sshd_config PermitRootLogin no PasswordAuthentication no # отключим доступ по паролю, всем. PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys systemctl restart sshd systemctl enable sshd btrfs send /mnt/arch/@_BACKUP | ssh office &quot;btrfs receive /mnt/backups&quot; # или btrfs send /mnt/arch/@_BACKUP | ssh -p 22 test@192.168.100.51 &quot;btrfs receive /mnt/backups&quot; . Пример скрипта - инкрементальный, взято с (ubuntu.ru/wiki). . #!/bin/bash # точки монтирования src=$(mktemp -d &quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX&quot;) dst=$(mktemp -d &quot;${TMPDIR:-/tmp/}$(basename 0).XXXXXXXXXXXX&quot;) #монтируем mount /dev/sda2 $src mount /dev/sdb2 $dst if [ -e $src/root_BCKP ] then # первый запуск полный бекап # Создаем снимок read-only btrfs subvolume snapshot -r $src/@ $src/root_BCKP sync # переносим btrfs send $src/root_BCKP | btrfs receive $dst/ else # повторный запуск, инкрементальный # Переименовываем mv $src/root_BCKP $src/root_BCKP_prev mv $dst/root_BCKP $dst/root_BCKP_prev # Создаем текущий btrfs subvolume snapshot -r $src/@ $src/root_BACKUP sync # инкрементальный бекап btrfs send -p $src/root_BCKP_prev $src/root_BACKUP | btrfs receive $dst/ fi # В $dst/root_BACKUP копия корня. umount $src umount $dst # Удаляем точки монтирования rmdir $src rmdir $dst . Всё это работает и в обратном порядке. . Удаляем или переименовываем mv. . btrfs subvolume delete /mnt/dump/@_BACKUP btrfs subvolume delete /mnt/dump/@home_BACKUP . Переименовываем новые snapshot(ы). . mv /mnt/dump/@_BACKUP_new /mnt/dump/@ mv /mnt/dump/@home_BACKUP_new /mnt/dump/@home . Свойства. Сейчас они в ro - read-only(только чтение), изменим на rw - read-write(чтение-завись). Значения изменяются так: ro true, ro false. . btrfs property get /mnt/dump/@ # посмотр свойств btrfs property set /mnt/dump/@ ro false btrfs property set /mnt/dump/@home ro false btrfs subvolume show /mnt/dump/@ # информация . Удаляем, если нужно. . btrfs subvolume delete /mnt/arch/@_BACKUP btrfs subvolume delete /mnt/arch/@home_BACKUP . Отмонтируем. . umount /mnt/arch umount /mnt/dump rmdir /mnt/{arch,dump} . Восстановление . Восстановление, как и выше, грузимся с live-usb, или с другой системы. Монтируем раздел для восстановления, поврежденный и раздел с backup, восстанавливаем снапшоты. . Монтируем файловую систему, для пересоздания fstab и инициализации. . mount -o subvol=@,compress=zstd /dev/sda8 /mnt ls /mnt mount -o subvol=@home,compress=zstd /dev/sda8 /mnt/home . Если boot раздел отдеольно, то нужно его тоже смонтироват в /mnt/boot и все другие subvolume. . mount /dev/sda2 /mnt/boot mount -t proc none /mnt/proc mount -t sysfs none /mnt/sys mount -o bind /dev /mnt/dev cp -L /etc/resolv.conf /mnt/etc swapon /dev/sda3 . Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием. . touch /swap # создаем пустой файл /swap chmod go-r /swap # swap должен иметь права 600 chattr +C /swap # отключаем COW, сжатие тоже отключается fallocate /swap -l4g # файл 4Gb mkswap /swap swapon /swap . Редактируем FSTAB, или запускаем genfstab. . rm /mnt/etc/fstab genfstab -pU /mnt &gt; /mnt/etc/fstab nano /mnt/etc/fstab . Переходим в нашу новую систему. . chroot /mnt . Или zsh. . chroot /mnt /bin/zsh . Перегенерироваь. . mkinitcpio -p linux . Установить загрузчик GRUB2 и сконфигурировать его. . grub-install /dev/sdХ grub-mkconfig -o /boot/grub/grub.cfg . Инициализируем ключи и обновим, если требуется. . pacman-key --init &amp;&amp; pacman-key --populate &amp;&amp; pacman-key --refresh-keys &amp;&amp; pacman -Syy . exit или “Ctrl + D” выйти из chroot. . Теперь нужно все размонтировать. . umount -R /mnt reeboot . Больше разжёвано на ubuntu.ru/wiki. .",
    "url": "https://glavos.github.io/wiki/btrfs/btrfs-part2/",
    "relUrl": "/wiki/btrfs/btrfs-part2/"
  }
  ,"5": {
    "title": "Лог Изменений",
    "content": "Подпишись, чтобы быть в кусе новостей. . Группа в VK: vk.com/glavos | Telegram канал: t.me/glavos_info | Подпишись на: RSS | . Последние и наиболее актуальные версии представлены на странице загрузки glavos.github.io/get. . Пройдите небольшой опрос. . Контакты . Свяжитесь с нами, если у Вас есть предложения, или пожелания. . Поддержи проект . Donate. | . {% for change in site.posts %} {{ change.title }} . {{ change.date | date_to_string }} {{ change.type }} . {{ change.content }} {% endfor %}",
    "url": "https://glavos.github.io/wiki/changelog/",
    "relUrl": "/wiki/changelog/"
  }
  ,"6": {
    "title": "Установка и настройка репозиториев glavos",
    "content": "Содержание . Добавление ключа 1 Установка | | Добавление ключа 2 Проверить отпечаток | Подписываем ключ | Обновляем ключи | Сортируем зеркала reflector | Устанавливаем зеркала | | Glavos aur | Добавление ключа 1 . Удалить все упомянания glavos_repo из /etc/pacman.conf. . sudo nano /etc/pacman.conf [glavos_repo] Server = https://github.com/glavos/$repo/raw/master/$arch ... . Установка . Скачать и запустить скрипт. | Автоматически установит запись в /etc/pacman.conf. | Установит необходимые ключи. | . curl -LO git.io/strap.sh sudo sh strap.sh . Добавление ключа 2 . Данный способ немного сложнее. . # инициализация gpg pacman-key --init pacman -Sy wget &amp;&amp; wget git.io/glavos.gpg pacman-key --add glavos.gpg # или с key сервера pacman-key --recv-keys 98F76D97B786E6A3 . Проверить отпечаток . pacman-key --finger 98F76D97B786E6A3 . Подписываем ключ . pacman-key --lsign-key 98F76D97B786E6A3 # список pacman-key --list-keys . Обновляем ключи . pacman-key --populate # up key server pacman-key --refresh-keys . Сортируем зеркала reflector . pacman -S reflector reflector --verbose -a1 -f10 -l70 -p https -p http --sort rate --save /etc/pacman.d/mirrorlist . Устанавливаем зеркала . nano /etc/pacman.conf [glavos_repo] Server = https://github.com/glavos/$repo/raw/master/$arch Server = https://osdn.net/projects/glavos/storage/$repo/$arch Server = https://cvc.keybase.pub/$repo . Glavos aur . Можете воспользоваться Glavos aur репозиторием, пакетов не так много, но он содержит последнии версии пакетов. . nano /etc/pacman.conf [glavos-aur] SigLevel = Optional TrustAll Server = https://dev.glavos.ru/glavos-aur . Если Вы заметите какие-либо проблемы в репозиториях, сообщите в Telegram Chat. .",
    "url": "https://glavos.github.io/wiki/install/ctlos-repo/",
    "relUrl": "/wiki/install/ctlos-repo/"
  }
  ,"7": {
    "title": "Glavos iso",
    "content": "YouTube link Старая версия, но многое объясняет. . Содержание . Создание iso образа | Глубокое вмешательство Подготовка | Сборка aur пакетов | Репозиторий iso | Сборка образа | Пересборка | Списки пакетов | | Создание iso образа . YouTube link Старое видео, но многое объясняет. . Github README - быстрый способ | . Глубокое вмешательство . Подготовка . Установить пакеты для сборки. . yay -S git archiso mkinitcpio-archiso --noconfirm --needed . Создание директории и клонирование репозитория. . mkdir ~/glavos cd ~/glavos git clone https://github.com/glavos/glavos_repo . Или ssh. . git clone git@github.com:glavos/ctlo_repo.git . Сборка aur пакетов . Найти нужный пакет на сайте аур aur.archlinux.org и загрузить snapshot вида *.tar.gz. . Собираем пакеты в build. . mkdir ~/glavos/glavos_repo/build cd ~/glavos/glavos_repo/build wget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz . Распаковываем и собираем пакет. . tar -xvzf gtk3-mushrooms.tar.gz cd gtk3-mushrooms makepkg -s . Копируем собраные пакеты в ~/glavos/glavos_repo/x86_64, инициализируем репозиторий. Пакеты в формате *.pkg.tar.xz, или zst. . cd ~/glavos/glavos_repo/x86_64 repo-add glavos_repo.db.tar.gz *.tar.xz . Или. . ./update.sh --add . После добавления новых пакетов из aur необходимо переинициализировать репозиторий.(Удалить файлы баз данных), или запустить скрипт update.sh он сам все пересоздаст. . repo-add glavos_repo.db.tar.gz *.tar.xz repo-add glavos_repo.db.tar.gz *.pkg.tar.zst . Или. . ./update.sh --add . Репозиторий iso . Клонируем репозиторий. Ветка master по умолчанию. . cd ~/glavos git clone --depth=1 https://github.com/glavos/glavosiso . Добавляем пользовательский репозиторий для aur пакетов. В /glavos/glavosiso/pacman.conf. . [glavos_repo] SigLevel = Optional TrustAll Server = file:///home/fiduchi/glavos/glavos_repo/$arch . Закоментировать репозиторий glavos, если нужно. . #[glavos_repo] #SigLevel = Never #Server = https://raw.github.com/glavos/glavos_repo/dev/repo/$arch . Сборка образа . Сделать скрипты исполняемыми. . cd glavosiso chmod +x {autobuild.sh,chroot.sh,mkarchiso} . Пакеты: packages.x86_64 | . Скрипту autobuild.sh обязательно нужно передать аргумент, любой. Я обычно отправляю xfce_1.7.0 de/wm и версию. . sudo ./autobuild.sh xfce_1.7.0 . Готовый образ и хэши создаются в данной директории ~/glavos/glavosiso/out. . Пересборка . Удалить каталоги и запустить скрипт сначала. . sudo rm -rf {out,work} . Или отредактировать. . nano /bin/pacstrap . Изменить строку, для пропуска установленных пакетов. . if ! pacman -r &quot;$newroot&quot; -Sy &quot;${pacman_args[@]}&quot;; then . На. . if ! pacman -r &quot;$newroot&quot; -Sy --needed &quot;${pacman_args[@]}&quot;; then . Удалить файлы блокировки. . sudo rm -v work/build.make_* . Списки пакетов . Список установленных пакетов в системе. Подробно. . LANG=C pacman -Sl | awk &#39;/ [installed ]$/ {print $1 &quot;/&quot; $2 &quot;-&quot; $3}&#39; &gt; ~/pkglist.txt LANG=C pacman -Sl | awk &#39;/ [installed ]$/ {print $2}&#39; &gt; ~/.pkglist.txt . Кратко. . pacman -Qqe &gt; ~/pkglist.txt pacman -Qqm &gt; ~/aurlist.txt .",
    "url": "https://glavos.github.io/wiki/other/ctlosiso/",
    "relUrl": "/wiki/other/ctlosiso/"
  }
  ,"8": {
    "title": "Поддержать развитие проекта",
    "content": "Glavos Linux создаётся и поддерживается на добровольной основе. . Вы можете помочь развитию проекта и сообщества, пожертвовав небольшую сумму денег, чтобы покрыть некоторые расходы, предоставив разработчикам время и свободу для улучшения функций. . Спасибо! Ваша поддержка очень важна. . Crypto Coin | Open Collective | Liberapay | PayPal | patreon.com | Donationalerts | . Реферальные ссылки . Вы также можете поддержать проект, используя одну из реферальных ссылок ниже. Win-win. . Digital Ocean, бонус 100$ на 2 месяца. | Vultr, бонус 100$. | Fozzy, промокод: TRAFF на скидку 10%. | Hostinger. | REG.RU, промокод: 8A39-8FCA-CDB4-F765 на скидку 5%. | . Eсли активно будете использовать Digital Ocean, в настройках аккаунта указывайте страну Украина и рандомный адрес, не будет начисляться НДС. Это касается практически любых подобных сервисов. .",
    "url": "https://glavos.github.io/donat/",
    "relUrl": "/donat/"
  }
  ,"9": {
    "title": "Запуск трансляции на youtube и livepeer",
    "content": "Стриминг с помощью проекта live-stream-radio. Потребуется nodejs lts и ffmpeg. . Ffmpeg — мощный инструмент конвертирования, кодирования и записи чего угодно. . yay -S ffmpeg . Результат с live-stream-radio youtu.be/Glu60hqtptc. | Результат на чистом ffmpeg youtu.be/LC640rkEs3Y. | . Устновка nvm . Скопируйте команду curl в репо nvm, так как версия может изменится. . curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash . И добавьте в конце ~/.zshrc или ~/.bashrc переменные среды. . export NVM_DIR=&quot;$HOME/.config/nvm&quot; # Lazy load if [[ -s &quot;$NVM_DIR/nvm.sh&quot; ]]; then NODE_GLOBALS=(`find $NVM_DIR/versions/node -maxdepth 3 -type l -wholename &#39;*/bin/*&#39; | xargs -n1 basename | sort | uniq`) NODE_GLOBALS+=(&quot;node&quot;) NODE_GLOBALS+=(&quot;nvm&quot;) # Lazy-loading nvm + npm on node globals load_nvm () { [ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot; } # Making node global trigger the lazy loading for cmd in &quot;${NODE_GLOBALS[@]}&quot;; do eval &quot;${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} $@ }&quot; done fi . Установка npm . Установите nodejs lts версию, npm идет в комплекте. . nvm install --lts . Проверить версии. . node -v | npm -v | . Live stream radio . Исходники проекта live-stream-radio. Установить глобально -g. . npm install -g live-stream-radio . Создание проекта . live-stream-radio --generate stream . Конфигурация . Замените значение stream_key на свой ключ youtube трансляции. . nano ~/stream/config.json . Запуск стрима . Перед запуском закиньте mp3 файлы в ~/stream/audio. . live-stream-radio --start stream . Чистый ffmpeg . Создайте дерево директорий и скрипт msrt.sh. В скрипте замените значения KEY. . mkdir ~/stream/{out,music,audio} . music тут храним всю музыку. | audio сюда копируем нужное для стрима. | out сюда упадут переименованные файлы 1.mp3,2mp3.... | . Такой костыль с переименованием, так как ffmpeg сыпет ошибки из-за содержания в именах пробелов и скобок. . nano ~/stream/msrt.sh . #! /bin/bash STREAM_URL=&quot;rtmp://a.rtmp.youtube.com/live2&quot; KEY=&quot;bla-bla-bla&quot; # STREAM_URL=&quot;rtmp://fra-rtmp.livepeer.com/live&quot; # KEY=&quot;bla-bla-bla&quot; FOLDER=&quot;audio&quot; out=&quot;out&quot; rm -rf $out/* j=0; for i in $FOLDER/*.mp3; do let j+=1; cp -r &quot;${i}&quot; $out/$j.mp3; done rm music.txt for i in $out/*.mp3 do printf &quot;file &#39;%s&#39; n&quot; $i &gt;&gt; music.txt done ffmpeg -f concat -i music.txt -c copy -f mpegts -y transport.ts 2&gt; /dev/null &amp; # -bsf:v h264_mp4toannexb if [ &quot;$1&quot; = &quot;-s&quot; ]; then ffmpeg -re -fflags +genpts -stream_loop -1 -i transport.ts -filter_complex &quot;[0:a]avectorscope=s=854x480:zoom=1.2:rc=40:gc=160:bc=80:rf=15:gf=10:bf=5,format=yuv420p[v]&quot; -map &quot;[v]&quot; -map 0:a -r 20 -g 40 -pix_fmt yuv420p -x264-params keyint=40:min-keyint=40:scenecut=-1 -s 854x480 -b:v 1000k -b:a 128k -ar 44100 -acodec aac -vcodec libx264 -preset superfast -bufsize 512k -crf 18 -threads 2 -f flv -flvflags no_duration_filesize &quot;$STREAM_URL/$KEY&quot; fi . Сделайте его исполняемым. . cd ~/stream chmod +x msrt.sh . Закиньте нужные mp3 файлы в директорию ~/stream/audio. . Запуск скрипта ./msrt.sh без аргумента, скопирует содержимое ~/stream/audio с переименованием в ~/stream/out, создаст файл ~/stream/transport.ts и список ~/stream/music.txt. . Запуск скрипта ./msrt.sh -s с аргументом повторит первое действие и запустит стрим в бесконечном цикле. Запустить лучше в tmux вкладке и пусть работает, остановить как обычно ctrl+c. В другой вкладке можно манипулировать файлами и выполнять перестроение ~/stream/transport.ts, запустив без аргумента ./msrt.sh, не останавливая поток. . Длительность ffmpeg -i transport.ts, смотри Duration: 00:16:50.86 длительность в сумме. . Livepeer . Создайте бесплатный аккаунт в livepeer.com, создайте stream. . Ссылка стрима, публичный адрес, запустить в проигрывателе или на веб странице, ей следует делиться. . https://fra-cdn.livepeer.com/hls/11af93cghjfgjpqz6a/index.m3u8 . RTMP ingest URL 1 подставьте в STREAM_URL и Stream key в KEY, как вы уже наверняка поняли это скрытые данные, имея доступ к ним любой может вещать на адрес выше. . STREAM_URL=&quot;rtmp://fra-rtmp.livepeer.com/live&quot; KEY=&quot;bla-bla-bla&quot; . Скопируйте и сохраните код ниже в файл index.html, отредактируйте в нем строку с url стрима, замените на свой. . var videoSrc = &#39;https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8&#39;; . Исходник. . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;live stream&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-sm-8&quot;&gt; &lt;div class=&quot;card fluid&quot;&gt; &lt;h1&gt;Stream music&lt;/h1&gt; &lt;video id=&quot;video&quot; class=&quot;&quot; controls&gt;&lt;/video&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-sm-8&quot;&gt; &lt;p&gt;Hls live stream.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; var video = document.getElementById(&#39;video&#39;); var videoSrc = &#39;https://fra-cdn.livepeer.com/hls/z8kdh258fwnopq14/index.m3u8&#39;; if (video.canPlayType(&#39;application/vnd.apple.mpegurl&#39;)) { video.src = videoSrc; } else if (Hls.isSupported()) { var hls = new Hls(); hls.loadSource(videoSrc); hls.attachMedia(video); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . Вот и все. Этот файл можно открыть с помощью браузера локально, или закинуть на какой-либо сервер, хостинг. Тем самым получить независимую трансляцию от youtube и стримить туда домашнее порно :). Скрипт можно легко адаптировать и под видео файлы, но это уже другая история. . Если Вы знаете более изящные способы, или имеете какие-либо идеи, дайте мне знать в telegram, там же можно обсудить, задать вопрос по этой теме. . Всем добра, любви и процветания! До свидания. . Ссылки . live-stream-radio | creating-music-videos | visualization-tricks | ffmpeg_audio_visualisation | Repeat Video ffmpeg | Music | .",
    "url": "https://glavos.github.io/wiki/packages/ffmpeg-stream/",
    "relUrl": "/wiki/packages/ffmpeg-stream/"
  }
  ,"10": {
    "title": "Glavos Linux FrankenWm",
    "content": "Содержание . Скачать iso образ | Конфигурационные файлы | Панели | Горячие клавиши Режимы и управление окнами | Запуск утилит | | . Скачать iso образ . Данный оконный менеджер доступен в xfce iso, метод online установки. . Скачать | . Рекомендации после установки next-install. . Конфигурационные файлы . Путь Описание . ~/.config/frankenwm/src/config.h | Основной конфиг. | . ~/.config/frankenwm/autostart | Скрипт автостарта. | . ~/.config/frankenwm/polybar/ | Конфиг и скрипты polybar. | . Данный wm необходимо перекомпилировать после изменения config.h. . cd ~/.config/frankenwm/src sudo make clean install . Необходим restart(выйти и зайти) killall frankenwm. . Изучите оффициальный man. . Панели . Верхний бар, polybar | Нижний бар - трей, tint2 | . Горячие клавиши . Конфиг ~/.config/frankenwm/src/config.h. . MOD4: Super/Windows | MOD1: Alt | XK_: воспринимайте как префикс, а дальше уже кнопка | . Присутствует утилита sxhkd для привязок клавиш без компиляции, конфиг ниже. По super + F1 можно увидеть данные привязки. . ~/.config/frankenwm/sxhkdrc | . Режимы и управление окнами . Секция переключения режимов. . /* mode selection */ { MOD4|SHIFT, XK_t, switch_mode, {.i = TILE}}, { MOD4|SHIFT, XK_m, switch_mode, {.i = MONOCLE}}, { MOD4|SHIFT, XK_b, switch_mode, {.i = BSTACK}}, { MOD4|SHIFT, XK_g, switch_mode, {.i = GRID}}, { MOD4|SHIFT, XK_f, switch_mode, {.i = FIBONACCI}}, { MOD4|SHIFT, XK_d, switch_mode, {.i = DUALSTACK}}, { MOD4|SHIFT, XK_e, switch_mode, {.i = EQUAL}}, . Ключ Описание . super+shift+t | TILE: тайлинг режим. | . super+shift+m | MONOCLE: окно развернуто. | . super+shift+b | BSTACK: нижний стек. | . super+shift+g | GRID: режим сетки. | . super+shift+f | FIBONACCI: режим фибоначи(золотое сечение), как в Bspwm. | . super+shift+d | DUALSTACK: двойной стек. | . super+shift+e | EQUAL: ровное деление. | . Зажатая Super(win) и клавиши мыши манипулируют окнами: резмер, положение. В плавающем режиме. . Запуск утилит . Ключ Описание . alt + shift | Переключение раскладки(us,ru). | . super+shift+Enter | Terminal urxvt. | . super+r | Rofi - меню(лаунчер). | . super+q | Закрыть окно. | . super+shift+q | Закрыть frankenwm. | . Комментарии приветствуются. Вступай в telegram чат: t.me/glavos. .",
    "url": "https://glavos.github.io/wiki/wm/frankenwm/",
    "relUrl": "/wiki/wm/frankenwm/"
  }
  ,"11": {
    "title": "Скачать glavos — страница загрузки",
    "content": "Только для x86-64(64-bit) архитектуры процессора. . . Актуальные ссылки для скачивания Glavos всегда представлены на данной странице. . Новости и обновления. | Как проверить контрольные суммы. | . Зеркала для скачивания . dev.glavos.ru | OSDN releases | Github releases | . Поддержи рублем и пройди небольшой опрос. .",
    "url": "https://glavos.github.io/get/",
    "relUrl": "/get/"
  }
  ,"12": {
    "title": "Настройка git и использование",
    "content": "Содержание . Настройка git | Использование | Работа с github | Настройка git . Конфигурация. . git config --global user.name &quot;glavos&quot; git config --global user.email &quot;glavos@protonmail.com&quot; . Генерация ssh-ключей. . ssh-keygen -t rsa -b 4096 -C &quot;glavos@protonmail.com&quot; . Забрать ключ в ~/.ssh имя id_rsa.pub. . Использование . Инициализация. . git init . Статус. . git status . Игнорирование файлов и каталогов .gitignore. . Добавление изменений. . git add . git commit -m &quot;test&quot; . Работа с github . Создание репозитория на github.com. . git remote add origin https://github.com/glavos/glavosiso git remote add origin git@github.com:glavos/glavosiso.git . Отменить регистрацию удаленного репозитария. . git remote rm origin . Отправка на github.com. . git push -u origin master git push --set-upstream origin master . Клонирование. . git clone https://github.com/glavos/glavosiso . Ssh. . git clone git@github.com:glavos/glavosiso.git . Или ветку. . git clone -b openbox git@github.com:glavos/glavosiso.git . Список репозиториев. . git remote . Отправка на github. . git push glavosiso master . Версия проекта tag. . git tag -f v1.0.0 git push origin v1.0.0 git tag -a v1.0.0 -m &quot;Release of version 1.0.0&quot; git push --tags # удалить tag ветку локально git tag -d v1.0.0 # удаленно git push --delete origin v1.0.0 . Релиз с созданием тега. . pacman -S hub # черновик hub release create -d -a glavos.iso -m &quot;release test&quot; -t &quot;openbox&quot; tag-test # публикация с привязкой к ветки и создание тега hub release create -a out/glavos.iso -m &quot;glavos openbox 1.3.0&quot; -t &quot;openbox&quot; v1.3.0-ob # script ~/.bin/grel.sh grel.sh v1.3.0-ob openbox . Новая ветка. . git branch work . Просмотр веток локально. . git branch . Просмотр веток и удаленных. . git branch -a . Создание локальных веток из удаленных. . git branch openbox origin/openbox git branch xfce origin/xfce git branch budgie origin/budgie . Отправка ветки на github. . git push origin dev . Перемещение по веткам. . git checkout work . Получить удаленную ветку. . git checkout -b bspwm origin/bspwm . Слияние веток. Перед этим переключить на ветку в которую сливаем. . git merge work . Удаление веток. . git branch -D work git push origin -d work . Просмотр изменений. . git log . Откат(предварительно, получить хэш). . git reset --hard a3775a5485af0af20375cedf46112db5f813322a git push --force .",
    "url": "https://glavos.github.io/wiki/other/git-start/",
    "relUrl": "/wiki/other/git-start/"
  }
  ,"13": {
    "title": "Использование GnuPG",
    "content": "Содержание . Цифровые подписи | Цифровые подписи . wiki.archlinux.org. . Генерация, создание пары ключей. . gpg --full-gen-key . Просмотр списка ключей. . gpg --list-keys gpg --list-secret-keys gpg --list-public-keys . Id ключей. . gpg --list-public-keys --keyid-format LONG gpg --list-secret-keys --keyid-format LONG . Удалить ключ. . gpg --delete-secret-keys 98F76D97B786E6A3 gpg --delete-keys 98F76D97B786E6A3 . Редактировать ключ. . gpg --expert --edit-key glavos@protonmail.com . Экспорт открытого ключа в текстовом виде. . gpg --armor --output pubkey.txt --export 98F76D97B786E6A3 . Экспорт закрытого ключа в текстовом виде. . gpg --armor --output privkey.txt --export-secret-keys 98F76D97B786E6A3 . Экспорт Certificate. . gpg -a --gen-revoke 98F76D97B786E6A3 &gt; rev_cert.gpg . Экспорт открытого ключа на keyserver. . gpg --keyserver keys.gnupg.net --send-keys 8123459 . Импорт открытого ключа из файла. . gpg --import key.txt . Или по номеру. . gpg --recv-keys 98F76D97B786E6A3 . Импорт закрытого ключа. . gpg --allow-secret-key-import --import privkey.txt . Импорт открытого ключа с keyserver. . gpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3 . Поиск. . gpg --keyserver keys.gnupg.net --search-keys mail@example.com . Обновление. . gpg --keyserver keys.gnupg.net --refresh-keys . Пример подписи и проверки подписи. . gpg --detach-sign --no-armor glavos.iso gpg --verify glavos.iso.sig glavos.iso . Зашифровать файл. . gpg --encrypt-files -r 98F76D97B786E6A3 secret.tar . Расшифровать файл. . gpg -d secret.tar.asc gpg -d secret.tar.asc &gt; secret.tar gpg -o secret.tar --decrypt secret.tar.asc . Шифровать каталог. . gpgtar --encrypt --output secret.tar -r 98F76D97B786E6A3 dir/ gpgtar -c -o secret.tar dir/ . Просмотр. . gpgtar -t secret.tar . Расшифровать каталог. . gpgtar -d secret.tar .",
    "url": "https://glavos.github.io/wiki/other/gnupg/",
    "relUrl": "/wiki/other/gnupg/"
  }
  ,"14": {
    "title": "Установка Grub UEFI",
    "content": "Содержание . Подготовка | Установка | Подготовка . Информация о диске. . parted /dev/sda print . Создать таблицу GPT. Создать boot раздел 512M, выбрать тип EFI. . cfdisk . parted /dev/sda print . Форматируем. . mkfs.fat -F32 /dev/sda1 . Монтируем корень и другие, если надо. . mount /dev/sda2 /mnt . Создаем efi дерикторию и др., если надо. . mkdir -p /mnt/boot/efi . Монтируем boot EFI. . mount /dev/sda1 /mnt/boot/efi . Установка . Выполняем chroot. . arch-chroot /mnt . Установим Grub. . pacman -S grub efibootmgr dosfstools os-prober . Установим grub в /boot/efi. . grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Arch --force . Сконфигурируем Grub. . grub-mkconfig -o /boot/grub/grub.cfg .",
    "url": "https://glavos.github.io/wiki/other/grub-uefi/",
    "relUrl": "/wiki/other/grub-uefi/"
  }
  ,"15": {
    "title": "Glavos Linux — iso образ, основанный на Arch Linux",
    "content": "Созданный с помощью archiso скриптов. . . Скачать Установка . Представлен в нескольких вариациях De,Wm. . Xfce | Openbox | Bspwm | FrankenWm | I3 Wm | . Подробнее о Glavos Linux . Графический установщик Calamares. . . Включает расширенную функцию разбиения дисков с поддержкой как ручных, так и автоматических операций разбиения. . Графический установщик программ Pamac. . . Установка, обновление пакетов. Разбивка по категориям. . Glavos Bspwm. .",
    "url": "https://glavos.github.io/",
    "relUrl": "/"
  }
  ,"16": {
    "title": "Установка Glavos Linux",
    "content": "Содержание . Запись ISO | Проверка ISO образа | Программы для записи | Установка | . Запись ISO . Для записи образа на USB накопитель потребуется установочный ISO образ, который можно скачать по ссылке Скачать Glavos Linux. . Перед началом записи образа, отформатируйте USB накопитель в FAT32, например, используя gparted. Проверьте контрольные суммы. . Проверка ISO образа . Файлы с контрольными суммами всегда находятся рядом с iso, в зеркалах загрузки и имеют расширение файла .txt. Внутри файла хеш, который и нужно сравнить. . Проверка контрольных сумм в Windows. . Чтобы проверить контрольные суммы в Windows используйте следующую утилиту MD5 &amp; SHA Checksum Utility. . Проверка контрольных сумм в Linux. . Проверка MD5. . md5sum glavos_xfce_1.0.0_20181102.iso . Проверка SHA256. . sha256sum glavos_xfce_1.0.0_20181102.iso . GPG. . sudo pacman -S gnupg . Импорт ключа и проверка образа. . gpg --keyserver keys.gnupg.net --recv-keys 98F76D97B786E6A3 gpg --verify glavos_xfce_1.0.0_20181102.iso.sig glavos_xfce_1.0.0_20181102.iso . Подробнее о GnuPG. . На этом проверка образа закончена. Выше были приведены несколько способов проверки, можете использовать любой, или все сразу. . Программы для записи . Для записи образа в Linux потребуется для начала отформатировать Ваш USB накопитель. Сделать это можно следующей командой. . sudo mkfs.vfat /dev/sdX -I . Далее записываем скачанный ранее образ используя утилиту dd. . sudo dd bs=4M if=glavos.iso of=/dev/sdX status=progress &amp;&amp; sync . Кросплатформенные инструменты для записи образов (Linux, Windows). . Etcher | . Для записи образа в Windows рекомендуется использовать программу Rufus. . При записи образа в программе Rufus выбирайте режим записи ISO в dd. . Установка . После успешной записи образа и его загрузки на Вашем устройстве Вы увидите в самом начале раздел выбора языка интерфейса. Выбирайте тот, который Вам удобен. В данном примере будет использоваться русский язык. . Если вы используете образ с xfce, то у вас присутствует выбор метода установки. . Online: открывается раздел выбора других окружений и доп. программ, обязательно требуется включенный интернет. | Offline: произойдет установка того, что вы видите в текущий момент, простая распаковка, интернет не нужен. | . . На следующем шаге Вам требуется указать Ваше примерное местоположение для установки и выбора временной зоны. . . Раскладка ru,us по alt+shift. . . После выбора раскладки Вам требуется разметить диск вручную либо оставить всё как есть. . . После завершения переразметки диска Вам нужно создать пользователя, выбрать желаемый пароль. . . Проверяем данные, можно вернуться и исправить, если что-то не так. Если всё верно - нажимайте “Установить”. . . Дождитесь конца установки. . . Готово! Теперь Вы можете перезагрузить Ваше устройство. . . Выбор в меню GRUB. . . Менеджер входа (используется LightDm), в правом верхнем углу можно выбрать сессию, если присутствуют другие Окружения (DE), или Оконные менеджеры (WM). На данном скриншоте XFCE, она единственная и по умолчанию ничего можно не выбирать. . . Вот и все! Отдельная благодарность за скриншоты пользователю breadandbutter с nnm-club.me . .",
    "url": "https://glavos.github.io/wiki/install/install-ctlos/",
    "relUrl": "/wiki/install/install-ctlos/"
  }
  ,"17": {
    "title": "Iwd настройка wifi",
    "content": "Содержание . Установка и использование | Ручная настройка | Автоматическое включение wifi | Назначение прав и включение сервиса | ArchWiki iwd. . Установка и использование . sudo pacman -S iwd wpa_supplicant dhclient # Смотрим список интерфейсов iwctl device list #Сканируем интерфейс iwctl station wlp5s0 scan # Список доступных сетей iwctl station wlp5s0 get-networks # Подключение с указанием пароля, SSID имя сети iwctl --passphrase passphrase station device connect &quot;SSID&quot; dhclient . Дальнейшее подключение происходит автоматически. . Ручная настройка . Не обязательно. . Учетные данные Wi-Fi хранятся в /var/lib/iwd, точное имя SSID следует использовать, формат: SSID.psk. . [Security] PreSharedKey=a2a0bf020727b1ea1c0542d16e1ccbbbab791d933e9b92783540257910a15817 Passphrase=password . Для создания зашифрованного psk используйте wpa_passhrase. . wpa_passphrase my_ssid password . Для подключения к сети. . iwctl station wlp5s0 connect &quot;SSID&quot; dhclient . Автоматическое включение wifi . Через сервис systemd, создайте скрипт для подключенияю . sudo nano /usr/local/wifi.sh . #!/bin/bash iwctl station wlan0 connect &quot;SSID&quot; dhclient . Создайте сервис systemd. . sudo nano /etc/systemd/system/wifi.service . [Unit] Before=network.target Wants=network.target [Service] ExecStart=/usr/local/wifi.sh [Install] WantedBy=default.target . Назначение прав и включение сервиса . chmod 744 /usr/local/wifi.sh chmod 664 /etc/systemd/system/wifi.service systemctl daemon-reload systemctl enable wifi.service .",
    "url": "https://glavos.github.io/wiki/packages/iwd/",
    "relUrl": "/wiki/packages/iwd/"
  }
  ,"18": {
    "title": "Mpd и ncmpcpp",
    "content": "Настройка mpd сервера и консольного плеера ncmpcpp. Локальное и удаленное управление. . Digital Ocean Bonus 100$ | Проголосуй за следующее видео | . Установка локально . Локально, на своей машине установите пакеты. . yay -S mpd mpc ncmpcpp mpv . Конфигурация mpd . mkdir -p ~/.config/mpd nano ~/.config/mpd/mpd.conf . Важно, указывайте именно 0.0.0.0, а не localhost и не 127.0.0.1. . bind_to_address &quot;0.0.0.0&quot; port &quot;6600&quot; music_directory &quot;/media/files/mega/music&quot; playlist_directory &quot;~/.config/mpd/playlists&quot; db_file &quot;~/.config/mpd/db&quot; log_file &quot;/tmp/logmpd&quot; pid_file &quot;~/.config/mpd/pid&quot; state_file &quot;~/.config/mpd/state&quot; auto_update &quot;yes&quot; auto_update_depth &quot;2&quot; audio_output { type &quot;pulse&quot; # or pulse,alsa name &quot;MPD live&quot; } audio_output { type &quot;fifo&quot; name &quot;MPD FIFO&quot; path &quot;/tmp/mpd.fifo&quot; format &quot;44100:16:2&quot; } . Конфигурация ncmpcpp . mkdir ~/.ncmpcpp nano ~/.ncmpcpp/config . {% raw %} mpd_host = localhost mpd_port = 6600 mpd_crossfade_time = 2 visualizer_data_source = /tmp/mpd.fifo visualizer_output_name = &quot;Visualizer feed&quot; visualizer_in_stereo = no visualizer_type = spectrum visualizer_look = ●┃ visualizer_color = cyan, green, yellow, magenta, red song_list_format = &quot;{{%a - %t}|{%f}}{$R%l}&quot; song_status_format = &quot;{{%a{ $2//$9 %b{, %y}} $2//$9 }{%t$/b}}|{$b%f$/b}&quot; song_library_format = {{%a - %t} (%b)}|{%f} now_playing_prefix = &quot;$b$5&quot; now_playing_suffix = &quot;$/b$9&quot; playlist_display_mode = classic autocenter_mode = yes progressbar_look = &quot;▃▃▃&quot; header_visibility = no statusbar_visibility = no titles_visibility = no follow_now_playing_lyrics = no enable_window_title = no external_editor = nano colors_enabled = yes empty_tag_color = red header_window_color = yellow volume_color = yellow state_line_color = red state_flags_color = yellow main_window_color = default color1 = red color2 = red progressbar_color = black progressbar_elapsed_color = red statusbar_color = default alternative_ui_separator_color = magenta window_border_color = yellow active_window_border = magenta execute_on_song_change = notify-send &quot;Now Playing ♫&quot; &quot;$(mpc current)&quot; {% endraw %} . Настройка на сервере . Достаточно скопировать данные конфиги на сервер. Замените юзера и ip. . scp -r ~/.ncmpcpp cretm@134.122.88.241:~/ ssh cretm@134.122.88.241 &quot;mkdir -p ~/.config/mpd&quot; scp -r ~/.config/mpd/mpd.conf cretm@134.122.88.241:~/.config/mpd # login ssh cretm@134.122.88.241 . И в конфиг mpd добавить секцию http после pulse. . nano ~/.config/mpd/mpd.conf . audio_output { type &quot;httpd&quot; name &quot;HTTP mpd&quot; encoder &quot;vorbis&quot; port &quot;8000&quot; bitrate &quot;128&quot; format &quot;44100:16:1&quot; always_on &quot;yes&quot; tags &quot;yes&quot; } . Установка на сервере . ssh cretm@134.122.88.241 yay -S mpd ncmpcpp . Запуск сервиса . Добавление в автозапуск системд сервиса и запуск от юзера. Это нужно выполнить везде. . systemctl --user enable --now mpd . Запуск потока . mpv http://dev.glavos.ru:8000 # или ip mpv http://134.122.88.241:8000 . Управление воспроизведением . ncmpcpp -h dev.glavos.ru # или ip и порт ncmpcpp -h 134.122.88.241 -p 6600 . Если зашли по ssh, то дополнительные флаги не нужны. . ssh cretm@134.122.88.241 ncmpcpp . Ссылки по теме . Digital Ocean Bonus 100$ | Mpd | Mpd Tips | ncmpcpp | Config dotshare | .",
    "url": "https://glavos.github.io/wiki/packages/mpd/",
    "relUrl": "/wiki/packages/mpd/"
  }
  ,"19": {
    "title": "Работа с Netcat, ssh, rsync",
    "content": "Содержание . Установка nc и pv | Пример ssh туннеля | scp | Синхронизация rsync | Установка nc и pv . sudo pacman -S gnu-netcat pv . Примеры передач. . cat dump.iso | pv -b | nc -l 3333 dd if=/dev/sdb5 | gzip -9 | nc -l 3333 tar -czf - /etc/ | pv -b | nc -l 3333 . Примеры получения. . nc 187.187.55.18 3333 | pv -b &gt; dump.iso nc 187.187.55.18 3333 | pv -b &gt; ddsdb5dump.img.gz nc 187.187.55.18 3333 | pv -b &gt; dump.tar.gz . Пример ssh туннеля . Это нужно в том случае, если нет доступа к порту 3333. Вся передача шифруется, т.к. ssh. . Создаем мост(туннель) на ip 127.0.0.1(localhost), на порт 23333. -p 22 Это стандартный ssh порт, обычно его меняют. . ssh -p 22 -f -L 23333:127.0.0.1:3333 name@187.187.55.18 sleep 10; nc 127.0.0.1 23333 | pv -b &gt; glavos.iso # проброс порта ssh -p 22 -fN -L 23333:127.0.0.1:3333 name@187.187.55.18 . scp . С локалки на удаленнку. . scp -P 2222 file.txt file2.txt name@187.187.55.18:/home/user/dir scp -P 2222 -r dir1 name@187.187.55.18:/home/user/dir2 . С удаленки на локалку. . scp -P 2222 name@187.187.55.18:file.txt /home/user/dir scp -P 2222 name@187.187.55.18:~/ {file1,file2,file3 } . scp -P 2222 -r name@187.187.55.18:/home/dir/ /home/user/dir/ . С одного сервака на другой. . scp name@187.187.55.18:/dir/file.txt name@198.198.188.18:/name/dir/ . Синхронизация rsync . Установка rsync. . sudo pacman -S rsync . На сервере нужно создать диреторию /dump, запустить сервис(daemon), настроить конфиг и открыть 873 порт(tcp). . sudo systemctl start rsyncd.service . uid - пользователь на сервере, gid - группа в которой он состоит(обычно users). Создаем на сервере /dump и даём ему права. . sudo mkdir /dump sudo chown username:users /dump . Конфиг: /etc/rsyncd.conf. Укажите ip в hosts deny с которого вы подключаетесь. . syslog facility=daemon pid file=/var/run/rsyncd.pid transfer logging = yes log file = /var/log/rsyncd.log max connections = 10 exclude = lost+found/ dont compress = *.gz *.tgz *.zip *.z *.rpm *.deb *.iso *.bz2 *.tbz [dump] comment = rsync open for dump uid = username gid = users #auth users = st #secrets file = /etc/rsyncd.scrt path = /dump/ list = yes read only = no hosts allow = 188.128.110.170 hosts deny = * . После изменения конфига сделать рестарт. Авторизацию по паролю я не использую, поэтому две строки закомментил(#). . sudo systemctl restart rsyncd.service . По моим тестам лучше передавать не сжатые данные(Синхронизацция). . Отправка файла и пример директории. . rsync -auvz -L -P ~/test.sfs rsync://187.187.55.18/dump rsync -auvz -L -P ~/dir/* rsync://187.187.55.18/dump . Получение. . rsync -auvz -L -P rsync://187.187.55.18/dump ~/.dump/ . Ssh. . rsync -auvz -L -P -e &quot;ssh -p 2222&quot; name@187.187.55.18:/path/to/copy /local/path rsync -auvz -L -P -e &quot;ssh -p 2222&quot; /local/path name@187.187.55.18:/path/to/copy .",
    "url": "https://glavos.github.io/wiki/backup/netcat/",
    "relUrl": "/wiki/backup/netcat/"
  }
  ,"20": {
    "title": "Рекомендации после установки",
    "content": "Содержание . Обновление ключей | Информация о системе | Скорость интернета | Смена оболочки | Зеркала — Reflector Опции | Использование | Pacman hook | | Левое меню thunar | Используйте алиасы | Всегда помните о существовании Arch Wiki, большинство ответов уже существует, не ленитесь читать. Более актуальная информация на англ. языке. . Обновление ключей . Если возникли проблемы с обновлением, или установкой пакетов выполните данные рекомендации. . sudo pacman-key --init &amp;&amp; sudo pacman-key --populate &amp;&amp; sudo pacman-key --refresh-keys &amp;&amp; sudo pacman -Syy . Если ошибка с содержанием hkps.pool.sks-keyservers.net, не может достучаться до сервера ключей выполните команды ниже. Указываем другой сервер ключей. . sudo pacman-key --init &amp;&amp; sudo pacman-key --populate sudo pacman-key --refresh-keys --keyserver keys.gnupg.net &amp;&amp; sudo pacman -Syy . Если ошибка с содержанием /var/lib/pacman/sync, выполните команду ниже и повторите пункт с обновлением ключей. . sudo rm -rf /var/lib/pacman/sync/* . Если ошибка с содержанием /var/lib/pacman/db.lck, выполните команду. . sudo rm /var/lib/pacman/db.lck . Package signing . Информация о системе . Краткая информация о Вашей системе. . neofetch . Подробней о железе. . yay -S inxi # inxi -F . Скорость интернета . speed . Смена оболочки . Если вас не устраивает zsh, всегда можно переключить. . Для смены оболочки на BASH введите в терминале следующее: chsh -s /bin/bash. . Для смены оболочки на ZSH введите в терминале следующее: chsh -s /bin/zsh. . Зеркала — Reflector . Это ускорит загрузку пакетов. Arch Wiki. . В Glavos установлен скрипт ~/.bin/mirrors, отредактируйте его под ближайшие к Вам страны, а затем запустите от обычного пользователя. . Опции . reflector --list посмотреть список доступных для использования стран и кодов. | -l 10 выбрать 10 из списка. | -f 20 выбрать 20 по скорости. | --sort rate сортировато по скорости загрузки. | --sort score сортировато по рейтингу, оценки. | -a 12 синхронизированы за последние 12 часов. | --verbose подробный вывод. | . Использование . # несколько стран mirrors -lc # одна страна mirrors -c # не учитывает страны mirrors . Прямой командой. . sudo reflector -c ru,by,ua,pl -p https,http -l 20 --sort rate --save /etc/pacman.d/mirrorlist . sudo reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist . Или по одной. . sudo reflector --verbose -c ru -p https,http --sort score --save /etc/pacman.d/mirrorlist . Проверим: cat /etc/pacman.d/mirrorlist. . Обновление всей системы. . sudo pacman -Syyu . Pacman hook . Создайте файл sudo nano /etc/pacman.d/hooks/mirrorupgrade.hook, содержимое ниже. В ArchWiki немного другой пример. . В Exec = Пропишите выполнение reflector с нужными вам опциями. . [Trigger] Operation = Upgrade Type = Package Target = pacman-mirrorlist [Action] Description = Updating pacman-mirrorlist with reflector When = PostTransaction Depends = reflector Exec = /usr/bin/reflector -c ru,by,ua,pl -p https,http --sort rate -a 12 -l 10 --save /etc/pacman.d/mirrorlist . Данный хук будет выполнен после обновления pacman-mirrorlist. . Левое меню thunar . xdg-user-dirs-gtk-update . Используйте алиасы . Алиасы — сокращение команд, находятся в файле ~/.alias_zsh. . Yay работает, как pacman, т.е. выполняет теже функции, поэтому я в основном использую команды yay для манипуляции с пакетами. Вот данный набор из файла. . alias y=&quot;yay -S&quot; установка. | alias yn=&quot;yay -S --noconfirm&quot; установка без подтверждения. | alias ys=&quot;yay&quot; поиск с дальнейшим выбором по цифре. | alias ysn=&quot;yay --noconfirm&quot; поиск с дальнейшим выбором по цифре, без подтверждения. | alias yc=&quot;yay -Sc&quot; очистка кэша. | alias yy=&quot;yay -Syy&quot; синхронизация баз зеркал. | alias yu=&quot;yay -Syyu&quot; обновление. | alias yun=&quot;yay -Syyu --noconfirm&quot; обновление без подтверждения. | alias yr=&quot;yay -R&quot; удаление пакет(а,ов). | alias yrn=&quot;yay -R --noconfirm&quot; удаление пакет(а,ов) без подтверждения. | . Пример удаления: yrn htop. . Команда cache, для очистки кэша пакетов и оптимизация базы pacman. Все исполняемые скрипты лежат в ~/.bin. .",
    "url": "https://glavos.github.io/wiki/install/next-install/",
    "relUrl": "/wiki/install/next-install/"
  }
  ,"21": {
    "title": "Заметки",
    "content": "Содержание . Загрузка и запись iso Wget | Curl | Curl и dd | | Установка без носителя | Настройка sudo | Загрузка и запись iso . https://github.com/glavos/glavosiso/releases . Прописать полную ссылку к файлу. . Wget . sudo wget -O - https://github.com/glavos/glavosiso/releases/download/v1.0.0/*.iso &gt; /dev/sdX &amp;&amp; sync . Curl . sudo curl -L https://github.com/glavos/glavosiso/releases/download/v1.0.0/*.iso &gt; /dev/sdX &amp;&amp; sync . Curl и dd . sudo curl -L https://github.com/glavos/glavosiso/releases/download/v1.0.0/*.iso | dd bs=4M of=/dev/sdX status=progress &amp;&amp; sync . Установка без носителя . wiki.archlinux.org/index.php/Install_from_existing_Linux. | Video. | . Настройка sudo . EDITOR=nano visudo . Дать пользователю привилегии суперпользователя, когда он вводит sudo. . malody ALL=(ALL) ALL . Или группе. . %wheel ALL=(ALL) ALL . Не спрашивать пароль у пользователя. . Defaults:malody !authenticate .",
    "url": "https://glavos.github.io/wiki/other/notes/",
    "relUrl": "/wiki/other/notes/"
  }
  ,"22": {
    "title": "Установка дополнительных программ",
    "content": "Содержание . Сборка пакетов | Virtualbox VirtualBox guest | | Steam | Tor | Bluetooth | Офисные пакеты | Принтеры | Некоторые пояснения и рекомендации по использованию. . Сборка пакетов . Установка пакетов из архивов aur tar.gz. . Создать каталог ~/.build и перейти в него. . mkdir ~/.build &amp;&amp; cd ~/.build . Найти нужный пакет на сайте aur.archlinux.org и загрузить snapshot. . wget https://aur.archlinux.org/cgit/aur.git/snapshot/gtk3-mushrooms.tar.gz . Распаковываем, переходим в каталог, собираем пакет и устанавливаем. . tar -xvzf gtk3-mushrooms.tar.gz cd gtk3-mushrooms makepkg -sri . Если ошибки целостности, можно проигнорировать. . makepkg -s --skipinteg . Проблема с импортом pgp ключей. Можно опустить проверку ключом --skippgpcheck. . makepkg -s --skippgpcheck . После сборки будет пакет с расширением имя.pkg.tar.zst Установить командой. . sudo pacman -U имя.pkg.tar.zst . Virtualbox . Arch Wiki Virtualbox. . sudo pacman -S virtualbox sudo pacman -S virtualbox-host-modules-arch sudo pacman -S virtualbox-guest-iso sudo modprobe vboxdrv sudo gpasswd -a имя_пользователя vboxusers . VirtualBox guest . Arch Wiki. . Общая директория, на машине. . mkdir ~/vboxshare . Общая директория, на виртуалке. uid и gid пользователя можно узнать командой id. . В настройках виртуальной машины добавьте общую директорию, выберите ту что создали ранее ~/vboxshare. Имя которое будет доступно в виртуалке укажите vboxshare. . Настройка гостевых дополнений на виртуалке. . sudo pacman -S virtualbox-guest-utils sudo pacman -S virtualbox-guest-iso . Systemd сервис в поставке загрузит нужные модули ядра. . sudo systemctl enable --now vboxservice . Добавьте пользователя в группу vboxsf, где user_name имя вашего пользователя в виртуальной машине. . sudo usermod -aG vboxsf user_name . Перезапустите виртуальную машину. Командами ниже создайте директорию и смонтируйте в нее. . mkdir ~/vboxshare sudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare . Если вы при создании общей директории выбрали авто подключение, то она уже доступна в /media/sf_vboxshare или в /mnt. Командой ниже можно перемонтировать в ~/vboxshare. . sudo mount -t vboxsf -o uid=1000,gid=1000 vboxshare vboxshare . Еще можете попробовать виртуалку от GNOME. . sudo pacman -S gnome-boxes . Steam . Необходимо раскомментировать репозиторий multilib в /etc/pacman.conf. . sudo pacman -S steam ttf-liberation lib32-alsa-plugins lib32-curl . wiki.archlinux.org. . Или установите Steam через Flatpak. . Tor . sudo pacman -S tor torsocks . Запуск, остановка сервиса tor. . sudo systemctl start tor sudo systemctl stop tor . Запуск через tor. . torify zsh torify ssh user@blabla -p 22 . Проверка ip. . curl --max-time 10 -w &#39; n&#39; http://ident.me . В firefox используйте расширение FoxyProxy. . В настройках расширения, Добавить новый SOCKS4, ip: 127.0.0.1, port: 9050 . Chromium запустите с флагом. . chromium --proxy-server=&#39;socks://127.0.0.1:9050&#39; &amp; . Если tor отказывается работать должным образом попробуйте отредактировать сервис. . sudo nano /usr/lib/systemd/system/tor.service . [Service] User=root Group=root Type=simple . sudo chown -R root:root /var/lib/tor/ sudo systemctl daemon-reload sudo systemctl restart tor . Bluetooth . sudo pacman -S blueman bluez-utils pulseaudio-bluetooth sudo systemctl enable bluetooth.service . Офисные пакеты . Wps office. . yay -S wps-office ttf-wps-fonts wps-office-mui-ru-ru wps-office-extension-russian-dictionary --noconfirm . Libre office. . yay -S libreoffice-fresh libreoffice-fresh-ru papirus-libreoffice-theme --noconfirm . Openoffice. . yay -S openoffice openoffice-ru-bin --noconfirm . Onlyoffice. . yay -S onlyoffice-bin --noconfirm . Принтеры . sudo pacman -S cups cups-filters cups-pdf cups-pk-helper ghostscript gsfonts foomatic-db foomatic-db-engine foomatic-db-ppds foomatic-db-nonfree foomatic-db-nonfree-ppds gutenprint foomatic-db-gutenprint-ppds system-config-printer hplip splix sudo systemctl enable org.cups.cupsd.service .",
    "url": "https://glavos.github.io/wiki/packages/other-pkg/",
    "relUrl": "/wiki/packages/other-pkg/"
  }
  ,"23": {
    "title": "Пакетные менеджеры",
    "content": "Содержание . Pamac manager | Gnome software | Flatpak Winepak | | Список некоторых программ Arch Wiki List applications. . В Arch принято использовать консольные пакетные менеджеры. Pacman главный и установлен по умолчанию, но существуют и графические менеджеры. . Для Aur репозитория существует множество консольных пакетных менеджеров, я на текущий момент использую yay и он установлен во всех моих образах. Он берет на себя роль управления не только aur пакетами, но и pacman. У него те же флаги и немного своих https://github.com/Jguer/yay. . Pamac manager . Установка. . yay -S pamac-aur . Навигация по категориям или поиск, в настройках включите поддержку aur. . Gnome software . Менеджер пакетов Gnome, хорошо использовать в связке с flatpak. . yay -S gnome-software gnome-software-packagekit-plugin . Flatpak . Flatpak – это современный, прогрессивный формат самодостаточных пакетов для GNU/Linux. Он поддерживает рантаймы, изоляцию внутри песочниц, установку без наличия прав супер пользователя и многое другое. . Установка. . sudo pacman -S flatpak . Основной репозиторий flatpak flathub.org/apps. . Добавление репозитория flathub. . flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo . Удаление репозитория flathub. . flatpak remote-delete flathub . Обновление flatpak. . flatpak update . Поиск. . flatpak search libreoffice . Список пакетов в репозитории flathub. . flatpak remote-ls flathub . Установка пакета в домашнюю директорию. . flatpak install flathub com.valvesoftware.Steam . Запуск. . flatpak run com.valvesoftware.Steam . Список установленых пакетов. . flatpak list . Обновление пакета. . flatpak update com.valvesoftware.Steam . Обновление пакетов. . flatpak update . Удаление пакета. . flatpak uninstall com.valvesoftware.Steam . После удаления приложения могут оставаться неиспользуемые рантаймы, очистим и их. . flatpak uninstall --unused . Winepak . Дополнительный репозиторий Winepak (игры, WoT и др.). . https://winepak.org. | https://github.com/winepak/applications. | . Добавление репозитория. . flatpak remote-add --if-not-exists winepak https://dl.winepak.org/repo/winepak.flatpakrepo .",
    "url": "https://glavos.github.io/wiki/install/pkg-manager/",
    "relUrl": "/wiki/install/pkg-manager/"
  }
  ,"24": {
    "title": "Рекомендации",
    "content": "Содержание . Linux-zen | Журнал systemd | Disable man-db | Linux-zen . Установка другого ядра, Kernels. . Если у вас карта nvidia, то драйвер нужно заменить sudo pacman -S nvidia-390xx-dkms. . sudo pacman -S linux-zen linux-zen-headers sudo mkinitcpio -p linux-zen sudo grub-mkconfig -o /boot/grub/grub.cfg . Журнал systemd . Уменьшение размера журнала логов Systemd. . sudo nano /etc/systemd/journald.conf . Раскомментировать и изменить строку. . SystemMaxUse=50M . Перезапустите сервис. . sudo systemctl restart systemd-journald.service . Disable man-db . Отключаем переодическое увеличение загрузки из-за man-db.service. . sudo systemctl disable man-db.service sudo systemctl disable man-db.timer .",
    "url": "https://glavos.github.io/wiki/config/recomend/",
    "relUrl": "/wiki/config/recomend/"
  }
  ,"25": {
    "title": "Screencast, работа с видео/аудио",
    "content": "Содержание . Параметры записи | Audacity Изменяем голос | | Замена аудио ffmpeg | AvidemuxQT | Ffmpeg Ускорение | Наложение аудио | | Конвертировать видео в gif | Stream | Kdenlive | Screencast, работа с видео/аудио. Скрипт в ~/.bin/cast. . Параметры записи . Pavucontrol, 46% микрофон. | Запись simplescreenrecorder: MKV, H.264, rate 20, superfast, vorbis 128. | Audacity: удаляем шумы(дважды), улучшаем звук. | ffmpeg: заменяем аудио дорожку. | ffmpeg: перекодируем в mp4, 1080p, 30 кадров, bit rate 128k, если нужно ускоряем на 20%. | ffmpeg: накладываем 2 аудио дорожку, зацикливаем и понижаем звук. | Обрезаем, если нужно. | . Audacity . Выделить фрагмент без звука, Эффекты-Noise Reduction-создать модель шума. | Двойной клик на дорожке(выделить всю), Эффекты-Noise Reduction-ок(в 2 этапа). | Нормализация. | Если необходимо усиливаем звук Дб. | . Изменяем голос . Двойной клик на дорожке(выделить всю), Эффекты-Смена высоты тона. -15, ок. | Файл-экспорт-как wav. | . Замена аудио ffmpeg . ffmpeg -i input.mp4 -i good.wav -map 0:0 -map 1:0 -c copy output.mp4 ffmpeg -i input.mp4 -i input.wav -c:a aac -vcodec copy -map 0:0 -map 1:0 output.mp4 . AvidemuxQT . Открыть видео. | Аудио-Выбрать дорожку. | Отключаем 1 дорожку по умолчанию. | На 2 дорожку добавляем отредактированый в Audacity wav файл. | Если нужно используем сдвиг. | . Ffmpeg . Обрезка. Нужно высчитать -t. . Вырезать 5 мин. . ffmpeg -ss 01:09:00 -t 00:05:00 -i arch.mkv -c:v copy -c:a copy out.mkv . Обрезаем последние 2 сек. из исходника в 8 сек.(00:00:08). . ffmpeg -ss 00:00:00 -i test.mkv -c copy -t 00:00:06 test2.mkv . С первой минуты по вторую(фрагмент с середины). . ffmpeg -ss 00:01:00 -i video.mp4 -to 00:02:00 -c copy -copyts out.mp4 . Первые 4 сек. . ffmpeg -i video.mp4 -ss 00:00:04 -c copy out.mp4 . Замедление, множитель больше 1. . Замедление в 2 раза: ffmpeg -i arch.mp4 -vf &quot;setpts=2.0*PTS&quot; speed_down.mp4 | . Ускорение . Ускорение в 2 раза: ffmpeg -i arch.mp4 -vf &quot;setpts=0.5*PTS&quot; speed.mp4 | Ускорение в 3 раза: ffmpeg -i arch.mp4 -vf &quot;setpts=1/3*PTS&quot; speed.mp4 | Ускорение в 5 раз: ffmpeg -i arch.mp4 -vf &quot;setpts=1/5*PTS&quot; speed.mp4 | Замедление в 5 раз: ffmpeg -i arch.mp4 -vf &quot;setpts=1*5*PTS&quot; out.mp4 . | Убрать аудио: -an | Убрать видео: -vn | Сохранить оригинальные кодеки: -c copy | Битрейт аудио: -b:a (-b:a 320k) | Битрейт видео: -b:v (-b:v 16M) | Количество кадров fps: -r (-r 25) | Разрешение видео: -s (-s 1280x720) | . Перед ускорением нужно убрать аудио -an. . ffmpeg -i arch.mkv -r 30 -s 1920x1080 out.mp4 ffmpeg -i out.mp4 -vf &quot;setpts=0.8*PTS&quot; speed.mp4 . Или комплексное, примерно на 20% atempo=1/setpts. . ffmpeg -i arch.mkv -filter_complex &quot;[0:v]setpts=0.8*PTS[v];[0:a]atempo=1.25[a]&quot; -map &quot;[v]&quot; -map &quot;[a]&quot; -b:a 128k -r 30 -s 1920x1080 speed.mp4 . Мозайка. . ffmpeg -i 1.avi -i 2.avi -i 3.avi -i 4.avi -filter_complex &quot; nullsrc=size=640x480 [base]; [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft]; [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright]; [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft]; [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright]; [base][upperleft] overlay=shortest=1 [tmp1]; [tmp1][upperright] overlay=shortest=1:x=320 [tmp2]; [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3]; [tmp3][lowerright] overlay=shortest=1:x=320:y=240 &quot; -c:v libx264 output.mkv ffmpeg -i 1.avi -i 2.avi -i 3.avi -i 4.avi -filter_complex &quot;nullsrc=size=640x480 [base]; [0:v] setpts=PTS-STARTPTS, scale=320x240 [upperleft]; [1:v] setpts=PTS-STARTPTS, scale=320x240 [upperright]; [2:v] setpts=PTS-STARTPTS, scale=320x240 [lowerleft]; [3:v] setpts=PTS-STARTPTS, scale=320x240 [lowerright]; [base][upperleft] overlay=shortest=1 [tmp1]; [tmp1][upperright] overlay=shortest=1:x=320 [tmp2]; [tmp2][lowerleft] overlay=shortest=1:y=240 [tmp3]; [tmp3][lowerright] overlay=shortest=1:x=320:y=240&quot; -c:v libx264 output.mkv . Наложение аудио . Проще заменить дорожку, или наложить в avidemux, если нужно применяем сдвиг в милесекундах (-2000), 2 секунды. . Опция shortest — если аудио и видео на входе имеют разную длительность по времени, то результат будет иметь длительность самого короткого компонента. . ffmpeg -i видео.mp4 -i аудио.wav -c:v copy -c:a copy -shortest результат.mkv mencoder -audiofile аудио.wav видео.mp4 -o результат.mp4 -ovc copy -oac copy . Наложение второй аудио дорожки и понижениие громкости. . ffmpeg -i video4.mp4 -i wave.mp3 -filter_complex &quot;[0:a]volume=1[a1];[1:a]volume=0.2[a2];[a1][a2]amerge=inputs=2&quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4 . Зацикливаем 2 аудио дорожку и понижаем звук, т.к. применили -stream_loop, то и -shortest нужен. . ffmpeg -i video4.mp4 -stream_loop -1 -i bla.mp3 -filter_complex &quot;[0:a]volume=1[a1];[1:a]volume=0.03[a2];[a1][a2]amerge=inputs=2&quot; -c:v copy -c:a libmp3lame -shortest out_mp3.mp4 . Конвертировать видео в gif . С 5 сек. на 2 сек. . ffmpeg -y -ss 5 -t 2 -i ~/.wall/bg.mp4 -filter_complex &quot;fps=10,scale=1366:-1:flags=lanczos[x];[x]split[x1][x2]; [x1]palettegen[p];[x2][p]paletteuse&quot; ~/.wall/out.gif . Изменить размер gif. . convert -resize 1366 -quality 10 .wall/wall.gif .wall/out.gif . Stream . Live Stream (3000kbps) rtmp://live.restream.io/live/key flv, libx264, b/rate 3000, mp3 128 . Kdenlive . Настроить-Параметры проекта по умолчанию-HD 1080i 30fps. | . Или. . Настроить-Параметры проекта по умолчанию-HD 1080p 60fps. | Настроить-Окружение-Потоков обработки - 2. | Сборка. Generic, MP4 (H264/AAC). | . Ускоряем сборку на MP4 (H264/AAC). Сборка-создать сценарий. Отредактировать скрипт. Изменить preset=faster на preset=ultrafast. Проверить скорость работы скрипта до и после. . time ./script001.sh . Размер выходного файла. . du -h video.mp4 . Результат теста. (исходник video.mkv 1:21 2,5Mb). . HD 1080i 30fps MP4 (H264/AAC) - 7:46 4,2 Mb | HD 1080p 60fps MP4 (H264/AAC) faster - 14:22 5,6Mb | HD 1080p 30fps MP4 (H264/AAC) faster - 8:24 4,1Mb | +HD 1080p 30fps MP4 (H264/AAC) ultrafast - 6:34 8.2Mb | HD 1080p 30fps webm - 7:58 9.9Mb | .",
    "url": "https://glavos.github.io/wiki/other/screencast/",
    "relUrl": "/wiki/other/screencast/"
  }
  ,"26": {
    "title": "Резервное копирование Squashfs",
    "content": "Содержание . Mksquashfs | Восстановление | Монтирование образа | Mksquashfs . Утилита сжатия. . pacman -S squashfs-tools arch-install-scripts . Смотрим разделы диска. . lsblk . Монтируем для чтения root,boot(home) и создаем образ, сжатие xz. . mount /dev/sda5 -o ro /mnt mount /dev/sda2 -o ro /mnt/boot mount /dev/sda7 -o ro /mnt/home . Архивируем. . mksquashfs /mnt ~/backup/myarch.sfs -comp xz . Исключение: -e /dir/file. . Отмонтируем по завершению. . umount -R /mnt . Восстановление . Из рабочей системы, или Live-usb. Форматируем и монтируем поврежденный или новый раздел, boot по необходимости и др. . mkfs.ext4 -L &quot;root&quot; -U &quot;$(blkid -o value -s UUID /dev/sda5)&quot; /dev/sda5 mkfs.ext2 -L &quot;boot&quot; -U &quot;$(blkid -o value -s UUID /dev/sda2)&quot; /dev/sda2 mkfs.ext4 -L &quot;home&quot; -U &quot;$(blkid -o value -s UUID /dev/sda7)&quot; /dev/sda7 mkswap /dev/sda3 mount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home . Распаковываем сжатый образ. . unsquashfs -d /mnt -f ~/backup/myarch.sfs . Проверим и отмонтируем раздел. . ls /mnt umount /dev/sda2 umount /dev/sda7 umount /dev/sda5 . Монтируем раздел root(dev/sda5), boot и др., если нужно. . mount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home swapon /dev/sda3 . Редактируем/Генерируем если нужно /etc/fstab, /etc/mkinitcpio.conf. . rm /mnt/etc/fstab genfstab -pU /mnt &gt; /mnt/etc/fstab . Делаем chroot в новую систему. . arch-chroot /mnt /bin/zsh . Или chroot /mnt /bin/bash Debian подобных. . Создаем initramfs-образы. . mkinitcpio -p linux . Настройка ключей pacman. . pacman-key --init pacman-key --populate . Обновляем меню загрузчика груб, os-prober (для поиска других ОС). . pacman -S os-prober grub-install /dev/sda grub-mkconfig -o /boot/grub/grub.cfg . Выходим из chroot, размонтируем разделы и перезагружаемся уже в восстановленную систему! . exit umount /mnt/boot umount /mnt/home umount /mnt reboot . Монтирование образа . mount ~/backup/myarch.sfs -t squashfs -o loop /mnt . Теперь вы можете скопировать из образа любые нужные файлы cp -p. . Добавить что-либо таким способом не получится, для этого нужно будет опять воспользоваться mksquashfs. .",
    "url": "https://glavos.github.io/wiki/backup/squashfs/",
    "relUrl": "/wiki/backup/squashfs/"
  }
  ,"27": {
    "title": "Установка и настройка ssh",
    "content": "Содержание . Установка | Настройка на клиенте Генерация ключей | Отправка ключа на сервер | Настройка конфига | | Настройка на сервере X11Forwarding на сервере | | Установка . Пакет должен быть установлен как на клиенте, так и сервере. . sudo pacman -S openssh . На сервере запустить и включить сервис в автостарт. . sudo systemctl start sshd sudo systemctl enable sshd . Настройка на клиенте . Генерация ключей . ssh-keygen -t rsa -b 4096 -C &quot;glavos@protonmail.com&quot; . Ключи упадут в ~/.ssh. . Отправка ключа на сервер . ssh-copy-id username@remote_host . Или так. Копируем ключ на сервер. . cat .ssh/id_rsa.pub | ssh dj2@192.168.1.35 &#39;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#39; . Настройка конфига . nano ~/.ssh/config . Подгоняем конфиг под конкретный сервер. Комментарии не учитываются #. Хостов может быть сколько угодно, какждый - сервер. . Host * #ForwardAgent yes #ForwardX11 yes #ForwardX11Trusted yes Host dj ForwardAgent yes ForwardX11 yes ForwardX11Trusted yes HostName 198.157.18.18 Port 223 User dj2 . Блок с Host * задает глобальные настройки для всех серверов. . Данный блок с Host dj конкретно под сервер. . Host: может быть любой, для вашего удобства. | Строки c Forward: включаем X11Forwarding. | Дальше ip, port, user (понятно). | . Настройка на сервере . Файл конфигурации тут: /etc/ssh/sshd_config. . Запрещаем авторизацию от root, можно не править, по умолчанию так. . PermitRootLogin no . Если правим, то укажем кому можно. . AllowUsers dj2 bob . Отключение авторизации по паролю. . PasswordAuthentication no . Укажем в конфиге файл авторизации. . AuthorizedKeysFile .ssh/authorized_keys . Права как на клиенте так и на сервере. . chmod 700 ~/.ssh chmod 600 ~/.ssh/* chown -R $USER ~/.ssh . Перезапустить сервис. . sudo systemctl restart sshd . X11Forwarding на сервере . Снять комментарии и привести строки в вид, в файле /etc/ssh/sshd_config. . X11Forwarding yes X11DisplayOffset 10 X11UseLocalhost no . Перезапустить сервис. . sudo systemctl restart sshd . При запуске через sudo, если ошибка cannot open display: xxx-xx:10.0, то скопировать файл авторизации в /root. . sudo cp -r ~/user_name/.Xauthority /root .",
    "url": "https://glavos.github.io/wiki/config/ssh/",
    "relUrl": "/wiki/config/ssh/"
  }
  ,"29": {
    "title": "Резервное копирование",
    "content": "Содержание . Timeshift | Rsync | Восстановление | Timeshift . Отличная программа для создания backup-ов и восстановления системы: Timeshift. Данная утилита создает мгновенны снимки btrfs, а со стандартами ext работает через rsync. Установка. . . yay -S timeshift . Интерфейс очень простой, главное правильно настроить исключения. . Это нужно для того, чтобы вы не дампили большие и не нужные каталоги вашей системы, т.к. это экономит время и место на диске, а работоспособность сохраняется. В пример могу привести каталог virtualbox, мне например он в копии системы не нужен, в том числе и смонтированный диск /home/st/files, думаю вы поняли. . Вот мой список правил. Правила исключений должны быть выше домашней директории, измените путем перетаскивания. . . Существует и консольный вариант timeshift, вы можете сделать chroot в вашу систему, смонтировать разделы и откатить версию. В help есть примеры, все просто timeshift -h. . Rsync . . Монтируем раздел для резервной копии, предварительно создайте каталог. . mount /dev/sdb1 /dump . Копируем / в /dump с исключением, но с созданием нужных директорий. . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/boot/*&quot;,&quot;/home/*&quot;} /* /dump/ . Скопировать систему полностью. . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/home/lost+found&quot;,&quot;/boot/lost+found&quot;} /* /dump/ . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/boot/lost+found&quot;,&quot;/home/lost+found&quot;,&quot;/home/*/.thumbnails/*&quot;,&quot;/home/*/.cache/*&quot;,&quot;/home/*/.local&quot;,&quot;/home/*/.gvfs/*&quot;,&quot;/home/*/files/*&quot;,&quot;/home/*/.var&quot;,&quot;/home/*/.npm&quot;,&quot;/home/*/.node-gyp&quot;,&quot;/home/*/.electron&quot;} /* /run/media/st/dump/myarch/ . Стоит заметить и исключить из /home, как пример ниже. . --exclude={&quot;/home/lost+found&quot;,&quot;/home/*/.thumbnails/*&quot;,&quot;/home/*/.cache/mozilla/*&quot;,&quot;/home/*/.local/share/Trash/*&quot;,&quot;/home/*/.gvfs/*&quot;} . rsync -avAXHP --delete --delete-excluded --exclude={&quot;/dev/*&quot;,&quot;/proc/*&quot;,&quot;/sys/*&quot;,&quot;/tmp/*&quot;,&quot;/run/*&quot;,&quot;/mnt/*&quot;,&quot;/media/*&quot;,&quot;/lost+found&quot;,&quot;/var/lib/pacman/sync/*&quot;,&quot;/var/cache/*&quot;,&quot;/var/tmp/*&quot;,&quot;/boot/lost+found&quot;,&quot;/home/lost+found&quot;,&quot;/home/*/.thumbnails/*&quot;,&quot;/home/*/.cache/mozilla/*&quot;,&quot;/home/*/.local/share/Trash/*&quot;,&quot;/home/*/.gvfs/*&quot;} /* /dump/ . Исключите каталоги в которых смонтированы диски/разделы, если нужно. . /home/st/files . Далее создаем архив. . cd /dump tar -caf &quot;/mnt/myarch.tar.xz&quot; /dump/* . Или gz он быстрее. . cd /dump tar -caf &quot;/mnt/myarch.tar&quot; /dump/* gzip -9 &quot;/mnt/myarch.tar&quot; . Восстановление . Форматируем нужные разделы, с помощью gparted или руками. . mkfs.ext4 -L &quot;root&quot; /dev/sda5 mkfs.ext2 -L &quot;boot&quot; /dev/sda2 mkfs.ext4 -L &quot;home&quot; /dev/sda7 mkswap /dev/sda3 . Загружаемся с live usb(или из этой системы), монтируем раздел root(dev/sda5), boot и др., если нужно. . mount /dev/sda5 /mnt mount /dev/sda2 /mnt/boot mount /dev/sda7 /mnt/home swapon /dev/sda3 . Создаем каталог и Монтируем раздел с архивом резервной копии. . mkdir /mnt/dump mount /dev/sdb1 /mnt/dump . Переходим на смонтированный диск(куда восстанавливаем), распаковываем архив. . cd /mnt tar xvJf /mnt/dump/myarch.tar.xz -С /mnt # или tar xvzf /mnt/dump/myarch.tar.gz -С /mnt . Делаем chroot в новую систему. . arch-chroot /mnt /bin/zsh . Редактируем если нужно /etc/fstab, /etc/mkinitcpio.conf, создаем initramfs-образы. . mv /mnt/etc/fstab /mnt/etc/fstab.bak genfstab -pU /mnt &gt; /mnt/etc/fstab . mkinitcpio -p linux . Настройка ключей pacman. . pacman-key --init pacman-key --populate . Обновляем меню загрузчика груб, os-prober (для поиска других ОС). . pacman -S os-prober grub-install /dev/sda grub-mkconfig -o /boot/grub/grub.cfg . Выходим из chroot, размонтируем разделы и перезагружаемся уже в восстановленную систему. . exit umount /mnt/boot umount /mnt/home umount /mnt/dump rmdir /mnt/dump umount /mnt # Или. exit umount -R /mnt reboot .",
    "url": "https://glavos.github.io/wiki/backup/timeshift-rsync/",
    "relUrl": "/wiki/backup/timeshift-rsync/"
  }
  ,"30": {
    "title": "Решение проблем",
    "content": "Содержание . Размер tmp | Ассоциации файлов | Win кодировка | Сброс времени | Контекстное меню thunar | Сброс root пароля | Некоторые решенные проблемы описаны на форуме forum.glavos.ru. . Размер tmp . Иногда при установки больших прог. из Aur возникает ошибка (Недостаточно места). Смотрим, сколько места. . df -h /tmp . Изменяем размер. . mount -o remount,size=4G /tmp . Теперь стало 4G. . df -h /tmp . Ассоциации файлов . Это нужно, если у вас открывается файл, или каталог не в той программе. Например, директория в музыкальном плеере. . Распознаем файл. . xdg-mime query filetype wallpaper.jpg . Проверяем дефолтные настройки. . xdg-mime query default inode/directory . Переопределяем. . xdg-mime default org.gnome.Nautilus.desktop inode/directory # или thunar xdg-mime default thunar.desktop inode/directory . Еще пример. . xdg-mime default vlc.desktop video/mp4 . Win кодировка . Установить gedit, выполнить в терминале команду ниже, радуемся. . gsettings set org.gnome.gedit.preferences.encodings candidate-encodings &quot;[&#39;UTF-8&#39;, &#39;WINDOWS-1251&#39;, &#39;KOI8-R&#39;, &#39;CURRENT&#39;, &#39;ISO-8859-15&#39;, &#39;UTF-16&#39;]&quot; . Сброс времени . Создать и применить рег.файл с таким содержанием. . Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control TimeZoneInformation] &quot;RealTimeIsUniversal&quot;=dword:00000001 . Контекстное меню thunar . Добавляем дополнительные пункты для создания файлов. . XDG_TEMPLATES_DIR=$(xdg-user-dir TEMPLATES) cd &quot;$XDG_TEMPLATES_DIR&quot; touch &#39;New Text File.txt&#39; &amp;&amp; touch &#39;New Word File.doc&#39; &amp;&amp; touch &#39;New Excel Spreadsheet.xls&#39; . Сброс root пароля . Reset_root_password. .",
    "url": "https://glavos.github.io/wiki/config/trouble/",
    "relUrl": "/wiki/config/trouble/"
  }
  ,"31": {
    "title": "Видео драйвера",
    "content": "Содержание . Информация | Intel | Nvidia Убираем тиринг | | AMD Убираем тиринг | | Для виртуальной машины | Информация . Узнать информацию о видео карте. . lspci -k | grep -A 2 -E &quot;(VGA|3D)&quot; . xf86-video-amdgpu — новый, свободный драйвер для видеокарт AMD. | xf86-video-ati — старый свободный драйвер для AMD. | xf86-video-intel — драйвер для встроенной графики Intel. | xf86-video-nouveau — свободный драйвер для карт NVIDIA. | xf86-video-vesa — свободный драйвер, поддерживающий все карты, но с очень ограниченной функциональностью. Для виртуальной машины. | nvidia — проприетарный драйвер для NVIDIA. | . Проприетарные драйвера обычно увеличивают производительность. . Раскомментировать репозиторий multilib в /etc/pacman.conf. . Аппаратное ускорение видео. . Intel . sudo pacman -S xf86-video-intel intel-media-driver lib32-mesa . Для поддержки 32-битных приложений lib32-mesa. | . Для intel все не однозначно, в случае проблем обращайтесь к Arch Wiki, если зависания и разрывы попробуйте создать файл sudo nano /etc/X11/xorg.conf.d/20-intel.conf с таким содержимым. . Section &quot;Device&quot; Identifier &quot;Intel Graphics&quot; Driver &quot;intel&quot; Option &quot;AccelMethod&quot; &quot;uxa&quot; Option &quot;NoAccel&quot; &quot;True&quot; Option &quot;DRI&quot; &quot;False&quot; Option &quot;TearFree&quot; &quot;true&quot; EndSection . Nvidia . yay -S nvidia nvidia-settings nvidia-utils opencl-nvidia opencl-headers lib32-nvidia-utils lib32-opencl-nvidia . Драйвер nvidia может иметь префикс nvidia-390xx, конкретно для вашей карты, уточняйте на сайте производителя и в Арч-вики. . yay -S lib32-opencl-nvidia-390xx lib32-nvidia-390xx-utils opencl-nvidia-390xx nvidia-390xx-utils nvidia-390xx-settings nvidia-390xx . Создание xorg файла /etc/X11/xorg.conf. . sudo nvidia-xconfig . Убираем тиринг . sudo nvidia-settings . Переходим. . X Server Display Configuration | Advanced | Force Full Composition Pipeline | Save to X Configuration File | Exit | Reboot | AMD . ATI | AMDGPU | . sudo pacman -S xf86-video-ati # или sudo pacman -S xf86-video-amdgpu . Убираем тиринг . Если ATI xf86-video-ati. . sudo nano /etc/X11/xorg.conf.d/20-radeon.conf . Section &quot;Device&quot; Identifier &quot;Radeon&quot; Driver &quot;radeon&quot; Option &quot;TearFree&quot; &quot;true&quot; EndSection . Если AMDGPU xf86-video-amdgpu. . sudo nano /etc/X11/xorg.conf.d/20-amdgpu.conf . Section &quot;Device&quot; Identifier &quot;AMD&quot; Driver &quot;amdgpu&quot; Option &quot;TearFree&quot; &quot;true&quot; EndSection . Для виртуальной машины . sudo pacman -S xf86-video-vesa .",
    "url": "https://glavos.github.io/wiki/config/videocfg/",
    "relUrl": "/wiki/config/videocfg/"
  }
  ,"32": {
    "title": "Glavos Linux Wiki",
    "content": "Благодарим Вас за интерес к Glavos Linux, надеемся Вас все устроит. . Glavos Linux — базируется на Arch Linux, iso образ собран с помощью archiso скриптов, полностью совместим с Arch Linux. . Собиралась данная система изначально исключительно для себя. Стандартное ПО, как и в большинстве дистрибутивов Linux. . . Скачать Glavos | История изменений | Поддержать | Исходный код | . Доступен только для x86–64(64-bit) архитектуры процессора. . Будьте добры, поставьте звезду на GitHub glavosiso repo. . . Пройдите небольшой опрос. . Статьи о Glavos . Русский Arch Linux | Краткий обзор установочного livecd Glavos Xfce v1.2.0 | Русский Arch Linux: интервью с создателем CtlOS | . В чем особенность Glavos . Поддержка русского языка. | Графический инсталлятор — calamares. | Менеджер программ — pamac-aur. | Набор необходимых драйверов — видео, звук, сеть. | Настроенный внешний вид. | Включена поддержка Aur, пакетный менеджер yay. | Не перегружен софтом. | . Ресурсы Glavos . Если вы обнаружите какие-либо проблемы, пожалуйста, не стесняйтесь обращаться. Любые отзывы приветствуются. . Telegram Chat | Matrix Chat | Discord | Паблик VK | Forum Glavos | Дорожная карта | Баг трекер | Status services | Исходный код сайта | YouTube канал автора | . Контакты . Telegram | Keybase | admin@glavos.ru | . Автор . . Stas Fiduchi. .",
    "url": "https://glavos.github.io/wiki/",
    "relUrl": "/wiki/"
  }
  
}